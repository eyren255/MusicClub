{"file_contents":{"navigation.js":{"content":"// Enhanced Navigation JavaScript for Music Club\n\n(function() {\n    'use strict';\n    \n    // DOM Elements\n    const backToTop = document.getElementById('backToTop');\n    const quickNavBtn = document.getElementById('quickNavBtn');\n    const quickNavMenu = document.getElementById('quickNavMenu');\n    const quickNavClose = document.getElementById('quickNavClose');\n    \n    // Back to Top Functionality\n    let scrollThreshold = 300;\n    \n    function updateBackToTopVisibility() {\n        if (window.pageYOffset > scrollThreshold) {\n            if (backToTop && backToTop.hidden) {\n                backToTop.hidden = false;\n                backToTop.style.animation = 'slideUp 0.3s ease';\n            }\n        } else {\n            if (backToTop && !backToTop.hidden) {\n                backToTop.style.animation = 'fadeOut 0.2s ease';\n                setTimeout(() => {\n                    backToTop.hidden = true;\n                }, 200);\n            }\n        }\n    }\n    \n    // Smooth scroll to top\n    function scrollToTop() {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    }\n    \n    // Quick Navigation Menu\n    function showQuickNav() {\n        if (quickNavMenu) {\n            quickNavMenu.hidden = false;\n            quickNavMenu.setAttribute('aria-hidden', 'false');\n            // Focus first item\n            const firstItem = quickNavMenu.querySelector('.quick-nav__item');\n            if (firstItem) {\n                setTimeout(() => firstItem.focus(), 50);\n            }\n        }\n    }\n    \n    function hideQuickNav() {\n        if (quickNavMenu) {\n            quickNavMenu.hidden = true;\n            quickNavMenu.setAttribute('aria-hidden', 'true');\n            // Return focus to trigger\n            if (quickNavBtn) {\n                quickNavBtn.focus();\n            }\n        }\n    }\n    \n    // Enhanced Keyboard Navigation\n    function handleGlobalKeydown(e) {\n        // Alt + Q: Quick Navigation\n        if (e.altKey && e.key.toLowerCase() === 'q') {\n            e.preventDefault();\n            if (quickNavMenu && quickNavMenu.hidden) {\n                showQuickNav();\n            } else {\n                hideQuickNav();\n            }\n            return;\n        }\n        \n        // Alt + T: Back to Top\n        if (e.altKey && e.key.toLowerCase() === 't') {\n            e.preventDefault();\n            scrollToTop();\n            return;\n        }\n        \n        // Alt + H: Home\n        if (e.altKey && e.key.toLowerCase() === 'h') {\n            e.preventDefault();\n            window.location.href = 'mainmenu.html';\n            return;\n        }\n        \n        // Ctrl + 1: Songs\n        if (e.ctrlKey && e.key === '1') {\n            e.preventDefault();\n            window.location.href = 'app.html';\n            return;\n        }\n        \n        // Ctrl + 2: Learn\n        if (e.ctrlKey && e.key === '2') {\n            e.preventDefault();\n            window.location.href = 'learn.html';\n            return;\n        }\n        \n        // Ctrl + K: Focus Search (if on song page)\n        if (e.ctrlKey && e.key.toLowerCase() === 'k') {\n            const searchInput = document.getElementById('searchInput');\n            if (searchInput) {\n                e.preventDefault();\n                searchInput.focus();\n                searchInput.select();\n            }\n            return;\n        }\n        \n        // Escape: Close modals/menus\n        if (e.key === 'Escape') {\n            if (quickNavMenu && !quickNavMenu.hidden) {\n                e.preventDefault();\n                hideQuickNav();\n            }\n        }\n        \n        // Enhanced shortcuts for song navigation (if script.js is loaded)\n        if (e.key === 'l' || e.key === 'L') {\n            const toggleBtn = document.getElementById('toggleListBtn');\n            if (toggleBtn && !e.ctrlKey && !e.altKey) {\n                e.preventDefault();\n                toggleBtn.click();\n            }\n        }\n        \n        if (e.key === 'f' || e.key === 'F') {\n            const favBtn = document.getElementById('favToggle');\n            if (favBtn && !e.ctrlKey && !e.altKey) {\n                e.preventDefault();\n                favBtn.click();\n            }\n        }\n        \n        if (e.key === 'r' || e.key === 'R') {\n            const randomBtn = document.getElementById('randomBtn');\n            if (randomBtn && !e.ctrlKey && !e.altKey) {\n                e.preventDefault();\n                randomBtn.click();\n            }\n        }\n        \n        if (e.key === 's' || e.key === 'S') {\n            const shareBtn = document.getElementById('shareBtn');\n            if (shareBtn && !e.ctrlKey && !e.altKey) {\n                e.preventDefault();\n                shareBtn.click();\n            }\n        }\n    }\n    \n    // Quick Navigation Menu Keyboard Navigation\n    function handleQuickNavKeydown(e) {\n        if (!quickNavMenu || quickNavMenu.hidden) return;\n        \n        const items = Array.from(quickNavMenu.querySelectorAll('.quick-nav__item, .quick-nav__header button'));\n        const currentIndex = items.indexOf(document.activeElement);\n        \n        switch(e.key) {\n            case 'ArrowDown':\n                e.preventDefault();\n                const nextIndex = currentIndex === items.length - 1 ? 0 : currentIndex + 1;\n                items[nextIndex].focus();\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                const prevIndex = currentIndex === 0 ? items.length - 1 : currentIndex - 1;\n                items[prevIndex].focus();\n                break;\n            case 'Enter':\n            case ' ':\n                e.preventDefault();\n                document.activeElement.click();\n                break;\n            case 'Escape':\n                e.preventDefault();\n                hideQuickNav();\n                break;\n        }\n    }\n    \n    // Enhanced tooltips with keyboard shortcuts\n    function addShortcutTooltips() {\n        // Add keyboard shortcut hints to existing buttons if they exist\n        const shortcuts = {\n            'prevBtn': 'Previous song (Left Arrow)',\n            'nextBtn': 'Next song (Right Arrow)',\n            'randomBtn': 'Random song (R)',\n            'favToggle': 'Toggle favorite (F)',\n            'shareBtn': 'Share song (S)',\n            'toggleListBtn': 'Toggle list (L)'\n        };\n        \n        Object.entries(shortcuts).forEach(([id, tooltip]) => {\n            const element = document.getElementById(id);\n            if (element) {\n                element.setAttribute('title', tooltip);\n            }\n        });\n    }\n    \n    // Show toast notification\n    function showToast(message, duration = 2000) {\n        const toast = document.getElementById('toast');\n        if (toast) {\n            toast.textContent = message;\n            toast.hidden = false;\n            toast.style.animation = 'slideUp 0.3s ease';\n            \n            setTimeout(() => {\n                toast.style.animation = 'fadeOut 0.2s ease';\n                setTimeout(() => {\n                    toast.hidden = true;\n                }, 200);\n            }, duration);\n        }\n    }\n    \n    // Sidebar functionality\n    function initSidebar() {\n        const toggleListBtn = document.getElementById('toggleListBtn');\n        const closeSidebarBtn = document.getElementById('closeSidebarBtn');\n        const sidebarPanel = document.getElementById('songListPanel');\n        const sidebarOverlay = document.getElementById('sidebarOverlay');\n        \n        function openSidebar() {\n            if(sidebarPanel && sidebarOverlay) {\n                sidebarPanel.classList.remove('sidebar--hidden');\n                sidebarPanel.classList.add('is-open');\n                sidebarOverlay.classList.add('is-visible');\n                if(toggleListBtn) {\n                    toggleListBtn.setAttribute('aria-expanded', 'true');\n                    toggleListBtn.title = 'Hide Songs (L)';\n                }\n                document.body.style.overflow = 'hidden';\n            }\n        }\n        \n        function closeSidebar() {\n            if(sidebarPanel && sidebarOverlay) {\n                sidebarPanel.classList.add('sidebar--hidden');\n                sidebarPanel.classList.remove('is-open');\n                sidebarOverlay.classList.remove('is-visible');\n                if(toggleListBtn) {\n                    toggleListBtn.setAttribute('aria-expanded', 'false');\n                    toggleListBtn.title = 'Show Songs (L)';\n                }\n                document.body.style.overflow = '';\n            }\n        }\n        \n        // Toggle sidebar\n        if(toggleListBtn) {\n            toggleListBtn.addEventListener('click', function() {\n                const isOpen = sidebarPanel && sidebarPanel.classList.contains('is-open');\n                if(isOpen) {\n                    closeSidebar();\n                } else {\n                    openSidebar();\n                }\n            });\n        }\n        \n        // Close sidebar button\n        if(closeSidebarBtn) {\n            closeSidebarBtn.addEventListener('click', closeSidebar);\n        }\n        \n        // Close sidebar when clicking overlay\n        if(sidebarOverlay) {\n            sidebarOverlay.addEventListener('click', closeSidebar);\n        }\n        \n        // Add Escape key handling to existing keyboard handler\n        const originalHandleGlobalKeydown = handleGlobalKeydown;\n        handleGlobalKeydown = function(e) {\n            // Handle Escape for sidebar\n            if(e.key === 'Escape' && sidebarPanel && sidebarPanel.classList.contains('is-open')) {\n                e.preventDefault();\n                closeSidebar();\n                return;\n            }\n            \n            // Call original handler\n            return originalHandleGlobalKeydown(e);\n        };\n    }\n    \n    // Always-draggable photos functionality\n    function initAlwaysDraggablePhotos() {\n        const imageWrap = document.querySelector('.viewer__image-wrap');\n        const songImage = document.getElementById('songImage');\n        \n        if(imageWrap && songImage) {\n            let isDragging = false;\n            let startX, startY, currentTransform = {x: 0, y: 0};\n            \n            function startDrag(e) {\n                isDragging = true;\n                const clientX = e.touches ? e.touches[0].clientX : e.clientX;\n                const clientY = e.touches ? e.touches[0].clientY : e.clientY;\n                startX = clientX - currentTransform.x;\n                startY = clientY - currentTransform.y;\n                songImage.style.cursor = 'grabbing';\n            }\n            \n            function drag(e) {\n                if(!isDragging) return;\n                e.preventDefault();\n                const clientX = e.touches ? e.touches[0].clientX : e.clientX;\n                const clientY = e.touches ? e.touches[0].clientY : e.clientY;\n                currentTransform.x = clientX - startX;\n                currentTransform.y = clientY - startY;\n                songImage.style.transform = `translate(${currentTransform.x}px, ${currentTransform.y}px)`;\n            }\n            \n            function stopDrag() {\n                isDragging = false;\n                songImage.style.cursor = 'grab';\n            }\n            \n            // Mouse events\n            songImage.addEventListener('mousedown', startDrag);\n            document.addEventListener('mousemove', drag);\n            document.addEventListener('mouseup', stopDrag);\n            \n            // Touch events\n            songImage.addEventListener('touchstart', startDrag, {passive: false});\n            document.addEventListener('touchmove', drag, {passive: false});\n            document.addEventListener('touchend', stopDrag);\n            \n            // Reset position when changing songs\n            function resetImagePosition() {\n                currentTransform = {x: 0, y: 0};\n                if(songImage) {\n                    songImage.style.transform = 'translate(0px, 0px)';\n                }\n            }\n            \n            // Hook into song changes if available\n            setTimeout(() => {\n                if(window.selectIndex) {\n                    const originalSelectIndex = window.selectIndex;\n                    window.selectIndex = function(...args) {\n                        resetImagePosition();\n                        return originalSelectIndex.apply(this, args);\n                    };\n                }\n            }, 500);\n        }\n    }\n    \n    // Enhanced bottom navigation functionality\n    function initBottomNavigation() {\n        // Update favorite button visual state in bottom nav (with safety check)\n        function updateBottomNavFavorite() {\n            const favBtn = document.getElementById('favToggle');\n            const iconElement = favBtn && favBtn.querySelector('.bottom-nav__icon');\n            if(favBtn && iconElement) {\n                const favorites = typeof window.getFavorites === 'function' ? window.getFavorites() : [];\n                const isFav = typeof window.currentIndex !== 'undefined' && favorites.includes(window.currentIndex);\n                \n                favBtn.classList.toggle('is-favorite', isFav);\n                iconElement.textContent = isFav ? '❤' : '♡';\n            }\n        }\n        \n        // Update bottom nav favorite when the page loads\n        setTimeout(updateBottomNavFavorite, 200);\n        \n        // Hook into existing updateFavUi function if available\n        setTimeout(() => {\n            if(typeof window.updateFavUi === 'function') {\n                const originalUpdateFavUi = window.updateFavUi;\n                window.updateFavUi = function() {\n                    originalUpdateFavUi();\n                    updateBottomNavFavorite();\n                };\n            }\n        }, 300);\n        \n        // Add haptic feedback for mobile interactions\n        function addHapticFeedback() {\n            if('vibrate' in navigator) {\n                navigator.vibrate(50);\n            }\n        }\n        \n        // Add haptic feedback to bottom nav buttons\n        const bottomNavBtns = document.querySelectorAll('.bottom-nav__btn');\n        bottomNavBtns.forEach(btn => {\n            btn.addEventListener('click', addHapticFeedback);\n        });\n    }\n\n    // Initialize navigation features\n    function init() {\n        // Back to Top\n        if (backToTop) {\n            backToTop.addEventListener('click', scrollToTop);\n            window.addEventListener('scroll', updateBackToTopVisibility, { passive: true });\n            updateBackToTopVisibility(); // Check initial state\n        }\n        \n        // Quick Navigation\n        if (quickNavBtn) {\n            quickNavBtn.addEventListener('click', showQuickNav);\n        }\n        \n        if (quickNavClose) {\n            quickNavClose.addEventListener('click', hideQuickNav);\n        }\n        \n        // Click outside to close quick nav\n        if (quickNavMenu) {\n            quickNavMenu.addEventListener('click', (e) => {\n                if (e.target === quickNavMenu) {\n                    hideQuickNav();\n                }\n            });\n        }\n        \n        // Global keyboard shortcuts\n        document.addEventListener('keydown', handleGlobalKeydown);\n        document.addEventListener('keydown', handleQuickNavKeydown);\n        \n        // Add shortcut tooltips\n        addShortcutTooltips();\n        \n        // New Sidebar functionality\n        initSidebar();\n        \n        // Always-draggable photos\n        initAlwaysDraggablePhotos();\n        \n        // Enhanced bottom navigation with favorite updates  \n        initBottomNavigation();\n        \n        // Accessibility improvements\n        document.querySelectorAll('a, button').forEach(element => {\n            if (!element.hasAttribute('aria-label') && element.title) {\n                element.setAttribute('aria-label', element.title);\n            }\n        });\n        \n        // Add smooth scrolling to all internal links\n        document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n            anchor.addEventListener('click', function (e) {\n                e.preventDefault();\n                const target = document.querySelector(this.getAttribute('href'));\n                if (target) {\n                    target.scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'start'\n                    });\n                }\n            });\n        });\n    }\n    \n    // Initialize when DOM is ready\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', init);\n    } else {\n        init();\n    }\n    \n    // Export functions for use by other scripts\n    window.musicClubNavigation = {\n        showQuickNav,\n        hideQuickNav,\n        scrollToTop,\n        showToast\n    };\n})();\n\n// Additional CSS for fade out animation\nconst additionalStyles = `\n@keyframes fadeOut {\n    from { opacity: 1; transform: translateY(0); }\n    to { opacity: 0; transform: translateY(10px); }\n}\n`;\n\n// Inject additional styles\nif (!document.getElementById('navigation-styles')) {\n    const styleSheet = document.createElement('style');\n    styleSheet.id = 'navigation-styles';\n    styleSheet.textContent = additionalStyles;\n    document.head.appendChild(styleSheet);\n}","size_bytes":17343},"rename_songs.py":{"content":"","size_bytes":0},"replit.md":{"content":"# Music Club Website\n\n## Overview\nA music club website for browsing and displaying song sheet music images. Features a collection of songs with images in Myanmar language, search functionality, favorites, and responsive design.\n\n## Project Structure\n- Static HTML/CSS/JavaScript frontend application\n- Python HTTP server for serving files in development\n- Collection of song images in \"Sa Yar Ga Toe Pwell\" folder\n- Multiple learning resource pages\n\n## Key Files\n- `index.html` - Redirects to main menu\n- `mainmenu.html` - Home page with navigation\n- `app.html` - Main song browser application\n- `learn.html` - Music learning resources hub\n- `script.js` - Main application logic and song data\n- `styles.css` - Complete styling and responsive design\n- `server.py` - Development HTTP server\n\n## Features\n- **Enhanced Navigation**: Bottom navigation bar with intuitive primary controls\n- **Smart UI**: Floating zoom controls and organized more menu\n- Song image browser with smooth navigation\n- Search functionality (by title or number)\n- Favorites and recently viewed songs\n- **Advanced Touch Support**: Swipe gestures for song navigation + haptic feedback\n- **Mobile-First Design**: Optimized for both desktop and mobile use\n- Multiple collections support\n- Keyboard shortcuts\n- Current song info display in header\n\n## Recent Changes (Sept 24, 2025)\n- **MAJOR NAVIGATION REVAMP**: Completely redesigned app.html navigation for better usability\n- **Bottom Navigation Bar**: Added mobile-friendly bottom nav with primary actions (Previous, Favorite, Next, Random, Fullscreen)\n- **Simplified Top Header**: Clean header showing current song info and collection\n- **Floating Zoom Controls**: Smart zoom controls that appear on hover/touch\n- **More Menu**: Organized secondary actions (Home, Share, Help, Quick Nav) in dropdown menu\n- **Mobile Enhancements**: Added swipe gestures for song navigation and haptic feedback\n- **Responsive Design**: Mobile-first approach with optimized touch targets\n- Set up Python HTTP server for Replit environment\n- Configured workflow to run on port 5000\n- Added deployment configuration for autoscale\n\n## Technology Stack\n- Frontend: HTML5, CSS3, JavaScript (vanilla)\n- Server: Python 3.11 HTTP server\n- Deployment: Replit autoscale configuration\n\n## Development\n- Server runs on port 5000 with cache-disabled headers for development\n- Static files served directly by Python HTTP server\n- No build process required\n\n## User Preferences\n- Project is ready for immediate use\n- All static assets included\n- Cross-platform compatible","size_bytes":2558},"script.js":{"content":"(function(){\n        \"use strict\";\n\n        /** Collections */\n        const collections = {\n                \"Sa Yar Ga Toe Pwell\": [\n                \"စတော်ဘယ်ရီချစ်သဲချင်\",\n                \"မြေပြန့်သူလေး\",\n                \"မျက်သွယ်\",\n                \"ရေစီကြောင်းလေး\",\n                \"ဖက်ထားမယ်\",\n                \"ပြော\",\n                \"ဝှက်ထားတဲ့ကောင်ကင်\",\n                \"အချစ်အတွက် တစ်ဖန်မွေးဖွားခဲ့ပြီ\",\n                \"အချစ်လို့ခေါ်သလား\",\n                \"လရိပ်\",\n                \"မမ\",\n                \"ကျေးဇူးပါကွယ်\",\n                \"နားလည်ပါ\",\n                \"ငယ်ချစ်ပုံပြင်\",\n                \"ချစ်တာတစ်ခုထဲသိတယ်\",\n                \"မြေနီလမ်း\",\n                \"more that I can say(carzoo)\",\n                \"ခရီများအဆုံးထိလျှောက်\",\n                \"The Old you (Piano Only)\",\n                \"ရိုးရှင်သောဘဝ\",\n                \"မကြာခင်မှာကြင်နာမယ်\",\n                \"မင်းတစ်ယောက်သာ\",\n                \"တိတ်တခိုးအချစ်\",\n                \"အတိုင်းထက်အလွန်\",\n                \"အတောင်ပံပါရင်မင်းဆီကို\",\n                \"ယုံကြည်ရာ\",\n                \"နင်စေရင်\",\n                \"ဆွေးတယ်\",\n                \"နွယ်နီ\",\n                \"သူငယ်ချင်း\",\n                \"မောင့်မျက်ရည်၀ိုင်း\",\n                \"နောက်ဆုံးရင်ခွင်\",\n                \"အချစ်မျက်ဝန်း\",\n                \"တို့သတိရနေမှာပါ\",\n                \"အမေ့အိမ်\",\n                \"ကိုယ်မညာတော့ဘူး\"\n                ],\n                \"Music Club Song List\": []\n        };\n        let currentCollection = \"Sa Yar Ga Toe Pwell\";\n        function getSongs(){ return collections[currentCollection] || []; }\n\n        // Enhanced Image Viewer State\n        let isFullscreen = false;\n        \n        /** Map human-readable titles to image filenames in folder `Sa Yar Ga Toe Pwell` */\n        const filenameByTitle = {\n                \"စတော်ဘယ်ရီချစ်သဲချင်\": \"Sa Yar Ga Toe Pwell/စတော်ဘယ်ရီချစ်သဲချင်.png\",\n                \"မြေပြန့်သူလေး\": \"Sa Yar Ga Toe Pwell/မြေပြန့်သူလေး.png\",\n                \"မျက်သွယ်\": \"Sa Yar Ga Toe Pwell/မျက်သွယ်.png\",\n                \"ရေစီကြောင်းလေး\": \"Sa Yar Ga Toe Pwell/ရေစီကြောင်းလေး.png\",\n                \"ဖက်ထားမယ်\": \"Sa Yar Ga Toe Pwell/ဖက်ထားမယ်.png\",\n                \"ပြော\": \"Sa Yar Ga Toe Pwell/ပြော.png\",\n                \"ဝှက်ထားတဲ့ကောင်ကင်\": \"Sa Yar Ga Toe Pwell/ဝှက်ထားတဲ့ကောင်ကင်.png\",\n                \"အချစ်အတွက် တစ်ဖန်မွေးဖွားခဲ့ပြီ\": \"Sa Yar Ga Toe Pwell/အချစ်အတွက် တစ်ဖန်မွေးဖွားခဲ့ပြီ.png\",\n                \"အချစ်လို့ခေါ်သလား\": \"Sa Yar Ga Toe Pwell/အချစ်လို့ခေါ်သလား.png\",\n                \"လရိပ်\": \"Sa Yar Ga Toe Pwell/လရိပ်.png\",\n                \"မမ\": \"Sa Yar Ga Toe Pwell/မမ.png\",\n                \"ကျေးဇူးပါကွယ်\": \"Sa Yar Ga Toe Pwell/ကျေးဇူးပါကွယ်.png\",\n                \"နားလည်ပါ\": \"Sa Yar Ga Toe Pwell/နားလည်ပါ.jpg\",\n                \"ငယ်ချစ်ပုံပြင်\": \"Sa Yar Ga Toe Pwell/ငယ်ချစ်ပုံပြင်.png\",\n                \"ချစ်တာတစ်ခုထဲသိတယ်\": \"Sa Yar Ga Toe Pwell/ချစ်တာတစ်ခုထဲသိတယ်.png\",\n                \"မြေနီလမ်း\": \"Sa Yar Ga Toe Pwell/မြေနီလမ်း.png\",\n                \"more that I can say(carzoo)\": \"Sa Yar Ga Toe Pwell/more that I can say(carzoo).png\",\n                \"ခရီများအဆုံးထိလျှောက်\": \"Sa Yar Ga Toe Pwell/ခရီများအဆုံးထိလျှောက်.png\",\n                \"The Old you (Piano Only)\": \"Sa Yar Ga Toe Pwell/The Old you (Piano Only).png\",\n                \"ရိုးရှင်သောဘဝ\": \"Sa Yar Ga Toe Pwell/ရိုးရှင်သောဘဝ.png\",\n                \"မကြာခင်မှာကြင်နာမယ်\": \"Sa Yar Ga Toe Pwell/မကြာခင်မှာကြင်နာမယ်.png\",\n                \"မင်းတစ်ယောက်သာ\": \"Sa Yar Ga Toe Pwell/မင်းတစ်ယောက်သာ.png\",\n                \"တိတ်တခိုးအချစ်\": \"Sa Yar Ga Toe Pwell/တိတ်တခိုးအချစ်.png\",\n                \"အတိုင်းထက်အလွန်\": \"Sa Yar Ga Toe Pwell/အတိုင်းထက်အလွန်.png\",\n                \"အတောင်ပံပါရင်မင်းဆီကို\": \"Sa Yar Ga Toe Pwell/အတောင်ပံပါရင်မင်းဆီကို.png\",\n                \"ယုံကြည်ရာ\": \"Sa Yar Ga Toe Pwell/ယုံကြည်ရာ.png\",\n                \"နင်စေရင်\": \"Sa Yar Ga Toe Pwell/နင်စေရင်.png\",\n                \"ဆွေးတယ်\": \"Sa Yar Ga Toe Pwell/ဆွေးတယ်.png\",\n                \"နွယ်နီ\": \"Sa Yar Ga Toe Pwell/နွယ်နီ.png\",\n                \"သူငယ်ချင်း\": \"Sa Yar Ga Toe Pwell/သူငယ်ချင်း.png\",\n                \"မောင့်မျက်ရည်၀ိုင်း\": \"Sa Yar Ga Toe Pwell/မောင့်မျက်ရည်၀ိုင်း.png\",\n                \"နောက်ဆုံးရင်ခွင်\": \"Sa Yar Ga Toe Pwell/နောက်ဆုံးရင်ခွင်.png\",\n                \"အချစ်မျက်ဝန်း\": \"Sa Yar Ga Toe Pwell/အချစ်မျက်ဝန်း.png\",\n                \"တို့သတိရနေမှာပါ\": \"Sa Yar Ga Toe Pwell/တို့သတိရနေမှာပါ.png\",\n                \"အမေ့အိမ်\": \"Sa Yar Ga Toe Pwell/အမေ့အိမ်.png\",\n                \"ကိုယ်မညာတော့ဘူး\": \"Sa Yar Ga Toe Pwell/ကိုယ်မညာတော့ဘူး.jpg\"\n        };\n\n    const elements = {\n                list: document.getElementById(\"songList\"),\n                image: document.getElementById(\"songImage\"),\n                fallback: document.getElementById(\"imageFallback\"),\n                metaIndex: document.getElementById(\"metaIndex\"),\n                metaTitle: document.getElementById(\"metaTitle\"),\n                prev: document.getElementById(\"prevBtn\"),\n                next: document.getElementById(\"nextBtn\"),\n                search: document.getElementById(\"searchInput\"),\n                listPanel: document.getElementById(\"songDrawer\"),\n                toggleList: document.getElementById(\"songListBtn\"),\n                landing: null,\n                enterBtn: null,\n                // New simplified navigation elements\n                currentSongTitle: document.getElementById(\"currentSongTitle\"),\n                songCounter: document.getElementById(\"songCounter\"),\n                searchBtn: document.getElementById(\"searchBtn\"),\n                favoriteBtn: document.getElementById(\"favoriteBtn\"),\n                zoomBtn: document.getElementById(\"zoomBtn\"),\n                // Song drawer elements\n                songDrawer: document.getElementById(\"songDrawer\"),\n                drawerBackdrop: document.getElementById(\"drawerBackdrop\"),\n                closeDrawerBtn: document.getElementById(\"closeDrawerBtn\"),\n                clearSearchBtn: document.getElementById(\"clearSearchBtn\"),\n                // Tabs in drawer\n                tabAll: document.getElementById(\"allSongsTab\"),\n                tabFav: document.getElementById(\"favoritesTab\"),\n                // Zoom overlay elements\n                zoomOverlay: document.getElementById(\"zoomOverlay\"),\n                zoomBackdrop: document.getElementById(\"zoomBackdrop\"),\n                closeZoomBtn: document.getElementById(\"closeZoomBtn\"),\n                zoomInBtn: document.getElementById(\"zoomInBtn\"),\n                zoomOutBtn: document.getElementById(\"zoomOutBtn\"),\n                zoomResetBtn: document.getElementById(\"resetZoomBtn\"),\n                // Loading elements\n                loadingOverlay: document.getElementById(\"imageLoadingOverlay\"),\n                zoomIndicator: document.getElementById(\"zoomIndicator\"),\n                zoomLevel: document.getElementById(\"zoomLevel\")\n        };\n\n    let currentIndex = 0; // 0-based\n    let filteredIndexes = getSongs().map((_, i) => i);\n    let favoritesByCollection = loadJson('favoritesByCollection', {});\n    let recentByCollection = loadJson('recentByCollection', {});\n    let activeTab = loadJson('activeTab', 'all');\n    currentCollection = loadJson('lastCollection', currentCollection);\n        // Removed zoomScale - using currentZoom consistently\n\n        function saveJson(key, value){\n                try{ localStorage.setItem(key, JSON.stringify(value)); }catch(_){}\n        }\n        function loadJson(key, fallback){\n                try{ const raw = localStorage.getItem(key); return raw ? JSON.parse(raw) : fallback; }catch(_){ return fallback; }\n        }\n\n    function getFavorites(){\n        return favoritesByCollection[currentCollection] || [];\n    }\n    function setFavorites(arr){\n        favoritesByCollection[currentCollection] = arr;\n        saveJson('favoritesByCollection', favoritesByCollection);\n    }\n    function getRecent(){\n        return recentByCollection[currentCollection] || [];\n    }\n    function setRecent(arr){\n        recentByCollection[currentCollection] = arr;\n        saveJson('recentByCollection', recentByCollection);\n    }\n\n        function renderList(){\n                elements.list.innerHTML = \"\";\n        const songs = getSongs();\n        let sourceIndexes = filteredIndexes;\n        const favorites = getFavorites();\n        const recent = getRecent();\n        if(activeTab === 'fav') sourceIndexes = sourceIndexes.filter(i => favorites.includes(i));\n        if(activeTab === 'recent') sourceIndexes = sourceIndexes.filter(i => recent.includes(i));\n        if(songs.length === 0){\n            const div = document.createElement('div');\n            div.className = 'empty-state';\n            div.textContent = 'No songs in this collection.';\n            elements.list.appendChild(div);\n            return;\n        }\n        if(sourceIndexes.length === 0){\n            const div = document.createElement('div');\n            div.className = 'empty-state';\n            div.textContent = 'No items match this view yet.';\n            elements.list.appendChild(div);\n            return;\n        }\n        sourceIndexes.forEach((songIndex) => {\n                        const title = songs[songIndex];\n                        const li = document.createElement(\"li\");\n                        li.className = \"song-item\" + (songIndex === currentIndex ? \" active\" : \"\");\n                        li.setAttribute(\"data-index\", String(songIndex));\n            const isFav = favorites.includes(songIndex);\n                        // Highlight search matches in title\n                        const searchQuery = elements.search.value.trim();\n                        const caseSensitive = document.getElementById('caseSensitive')?.checked ?? false;\n                        const highlightedTitle = searchQuery ? highlightMatches(title, searchQuery, caseSensitive) : escapeHtml(title);\n                        \n                        li.innerHTML = `\n                                <span class=\"song-index\">${songIndex + 1}</span>\n                                <span class=\"song-title\" title=\"${escapeHtml(title)}\">${highlightedTitle}</span>\n                                ${isFav ? '<span class=\"badge\">❤</span>' : ''}\n                        `;\n                        li.addEventListener(\"click\", () => selectIndex(songIndex));\n                        elements.list.appendChild(li);\n                });\n        }\n\n        function escapeHtml(str){\n                return str.replace(/[&<>\"']/g, function(ch){\n                        return ({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"\\\"\":\"&quot;\",\"'\":\"&#39;\"})[ch];\n                });\n        }\n\n        function updateMeta(){\n            updateCurrentSongDisplay();\n            const songs = getSongs();\n            // Update old elements if they exist (for legacy support)\n            if (elements.metaIndex) {\n                elements.metaIndex.textContent = `${currentIndex + 1} / ${songs.length}`;\n            }\n            if (elements.metaTitle) {\n                elements.metaTitle.textContent = songs[currentIndex] || \"—\";\n            }\n        }\n\n        function loadImageForCurrent(){\n                const songs = getSongs();\n                const title = songs[currentIndex];\n                const src = filenameByTitle[title];\n                // Always reset fallback state before attempting to load\n                elements.fallback.hidden = true;\n                elements.image.hidden = false;\n                \n                // Clear ready states before loading new image\n                if (elements.next) elements.next.classList.remove('ready');\n                if (elements.prev) elements.prev.classList.remove('ready');\n                \n                // Reset zoom state for new image\n                currentZoom = 1;\n                imageTranslateX = 0;\n                imageTranslateY = 0;\n                \n                if(!src){\n                        showFallback();\n                        hideLoadingOverlay();\n                        return;\n                }\n                \n                // Show loading overlay with debounce to avoid flicker\n                setTimeout(() => {\n                    if (elements.image.classList.contains('is-loading')) {\n                        showLoadingOverlay();\n                    }\n                }, 200);\n                \n                elements.image.hidden = false;\n                elements.fallback.hidden = true;\n                elements.image.alt = title;\n                elements.image.classList.remove('is-loaded');\n                elements.image.classList.add('is-loading');\n                elements.image.src = src + `?v=${encodeURIComponent(src.length)}`; // cache-bust lightly\n        // Enhanced preloading system\n        preloadAdjacentImages();\n                // Update navigation state after preloading starts\n                setTimeout(() => updateNavigationState(), 100);\n                // Auto-fit image when loading new image - use onload for reliability\n                const autoFitOnLoad = () => {\n                    if (elements.image.naturalWidth && elements.image.naturalHeight) {\n                        fitToScreen();\n                    }\n                };\n                \n                // Bind to onload event for consistent behavior\n                elements.image.onload = autoFitOnLoad;\n                \n                // Also call immediately if image is already cached/complete\n                if (elements.image.complete && elements.image.naturalWidth) {\n                    autoFitOnLoad();\n                }\n        }\n\n        // Enhanced image preloading system\n        const imageCache = new Map();\n        \n        function preloadAdjacentImages() {\n                const songs = getSongs();\n                const indices = [-2, -1, 1, 2]; // Preload 2 images in each direction\n                \n                indices.forEach(offset => {\n                        const targetIndex = (currentIndex + offset + songs.length) % songs.length;\n                        const title = songs[targetIndex];\n                        const src = filenameByTitle[title];\n                        \n                        if (src && !imageCache.has(src)) {\n                                const img = new Image();\n                                img.onload = () => {\n                                        imageCache.set(src, img);\n                                        // Subtle visual feedback for loaded images\n                                        if (Math.abs(offset) === 1) {\n                                                updateNavigationState();\n                                        }\n                                };\n                                img.onerror = () => {\n                                        console.warn(`Failed to preload image: ${src}`);\n                                };\n                                img.src = src + `?v=${encodeURIComponent(src.length)}`;\n                        }\n                });\n                \n                // Keep cache size reasonable\n                if (imageCache.size > 12) {\n                        const entries = Array.from(imageCache.entries());\n                        entries.slice(0, 6).forEach(([key]) => imageCache.delete(key));\n                        // Update navigation state after cache cleanup\n                        setTimeout(() => updateNavigationState(), 50);\n                }\n        }\n        \n        function updateNavigationState() {\n                const songs = getSongs();\n                const nextSrc = filenameByTitle[songs[(currentIndex + 1) % songs.length]];\n                const prevSrc = filenameByTitle[songs[(currentIndex - 1 + songs.length) % songs.length]];\n                \n                // Clear previous ready states first\n                elements.next.classList.remove('ready');\n                elements.prev.classList.remove('ready');\n                \n                // Add ready state only if images are currently cached\n                if (nextSrc && imageCache.has(nextSrc)) {\n                        elements.next.classList.add('ready');\n                }\n                if (prevSrc && imageCache.has(prevSrc)) {\n                        elements.prev.classList.add('ready');\n                }\n        }\n\n        function showFallback(){\n                elements.image.hidden = true;\n                elements.fallback.hidden = false;\n        }\n\n        function selectIndex(index){\n                const songs = getSongs();\n                if(index < 0 || index >= songs.length) return;\n                currentIndex = index;\n                renderList();\n                updateMeta();\n                loadImageForCurrent(); // This will reset zoom automatically\n        updateFavUi();\n        pushRecent(index);\n                // On small screens, auto-close the list to reveal the image\n                if(window.innerWidth <= 900 && elements.listPanel.classList.contains(\"is-open\")){\n                        elements.listPanel.classList.remove(\"is-open\");\n                        elements.toggleList.setAttribute(\"aria-expanded\", \"false\");\n                }\n        }\n\n        function selectPrev(){ selectIndex(currentIndex - 1); }\n        function selectNext(){ selectIndex(currentIndex + 1); }\n\n        function handleKeyboard(e){\n                // ArrowUp/Down moves selection within list, ArrowLeft/Right also prev/next\n                const songs = getSongs();\n                switch(e.key){\n                        case \"ArrowUp\": e.preventDefault(); selectPrev(); break;\n                        case \"ArrowDown\": e.preventDefault(); selectNext(); break;\n                        case \"ArrowLeft\": e.preventDefault(); selectPrev(); break;\n                        case \"ArrowRight\": e.preventDefault(); selectNext(); break;\n                        case \"Home\": e.preventDefault(); selectIndex(0); break;\n                        case \"End\": e.preventDefault(); selectIndex(songs.length - 1); break;\n                }\n        }\n\n        // Enhanced search with fuzzy matching\n        function fuzzyMatch(text, query) {\n            if (!query) return { match: true, score: 1 };\n            if (!text) return { match: false, score: 0 };\n            \n            const textLower = text.toLowerCase();\n            const queryLower = query.toLowerCase();\n            \n            // Exact match gets highest score\n            if (textLower.includes(queryLower)) {\n                return { match: true, score: 0.9 };\n            }\n            \n            // Fuzzy matching algorithm\n            let score = 0;\n            let queryIndex = 0;\n            let consecutiveMatches = 0;\n            \n            for (let i = 0; i < textLower.length && queryIndex < queryLower.length; i++) {\n                if (textLower[i] === queryLower[queryIndex]) {\n                    queryIndex++;\n                    consecutiveMatches++;\n                    score += consecutiveMatches * 0.1; // Bonus for consecutive matches\n                } else {\n                    consecutiveMatches = 0;\n                }\n            }\n            \n            // Calculate final score\n            const completionRatio = queryIndex / queryLower.length;\n            const finalScore = completionRatio * (score + 0.3);\n            \n            return {\n                match: completionRatio > 0.6, // At least 60% of query characters must match\n                score: finalScore\n            };\n        }\n\n        function highlightMatches(text, query) {\n            if (!query || !text) return text;\n            \n            const regex = new RegExp(`(${query.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`, 'gi');\n            return escapeHtml(text).replace(regex, '<span class=\"search-match-highlight\">$1</span>');\n        }\n\n        function applySearchFilter(){\n                const qRaw = elements.search.value || \"\";\n                const q = qRaw.toLowerCase();\n                const qDigits = q.replace(/[^0-9]/g, \"\");\n                \n                // Get search options\n                const useFuzzySearch = document.getElementById('fuzzySearch')?.checked ?? true;\n                const searchInFavoritesOnly = document.getElementById('searchInFavorites')?.checked ?? false;\n                const caseSensitive = document.getElementById('caseSensitive')?.checked ?? false;\n                \n        const songs = getSongs();\n        const searchResults = songs\n                        .map((title, i) => ({ title, i }))\n                        .filter(x => {\n                            // Filter by favorites if option is enabled\n                            if (searchInFavoritesOnly && !getFavorites().includes(x.i)) {\n                                return false;\n                            }\n                            \n                            if (q.length === 0) return true;\n                            \n                            const searchTitle = caseSensitive ? x.title : x.title.toLowerCase();\n                            const searchQuery = caseSensitive ? qRaw : q;\n                            \n                            // Number matching\n                            const indexStr = String(x.i + 1);\n                            const matchesNumber = qDigits.length > 0 && indexStr.startsWith(qDigits);\n                            \n                            if (matchesNumber) return true;\n                            \n                            // Text matching with case sensitivity support\n                            if (useFuzzySearch) {\n                                const fuzzyResult = caseSensitive ? \n                                    fuzzyMatch(x.title, qRaw) : \n                                    fuzzyMatch(searchTitle, searchQuery);\n                                return fuzzyResult.match;\n                            } else {\n                                return searchTitle.includes(searchQuery);\n                            }\n                        })\n                        .sort((a, b) => {\n                            if (q.length === 0) return 0;\n                            \n                            // Sort by relevance when using fuzzy search\n                            if (useFuzzySearch) {\n                                const searchTitle = caseSensitive ? a.title : a.title.toLowerCase();\n                                const searchQuery = caseSensitive ? qRaw : q;\n                                const scoreA = fuzzyMatch(searchTitle, searchQuery).score;\n                                \n                                const searchTitleB = caseSensitive ? b.title : b.title.toLowerCase();\n                                const scoreB = fuzzyMatch(searchTitleB, searchQuery).score;\n                                \n                                return scoreB - scoreA; // Higher score first\n                            }\n                            return 0;\n                        });\n                        \n        filteredIndexes = searchResults.map(x => x.i);\n        \n        // Update search results counter\n        updateSearchResultsCounter(filteredIndexes.length, songs.length);\n        \n                // Keep currentIndex if still visible; else snap to first visible\n                if(!filteredIndexes.includes(currentIndex)){\n                        currentIndex = filteredIndexes.length ? filteredIndexes[0] : 0;\n                }\n                renderList();\n                updateMeta();\n                loadImageForCurrent();\n        }\n\n        function updateSearchResultsCounter(resultsCount, totalCount) {\n            const counter = document.getElementById('searchResults');\n            const countSpan = document.getElementById('searchCount');\n            \n            if (!counter || !countSpan) return; // Safety check for missing elements\n            \n            if (elements.search.value.trim() === '') {\n                counter.hidden = true;\n                return;\n            }\n            \n            counter.hidden = false;\n            countSpan.textContent = `${resultsCount} of ${totalCount}`;\n        }\n\n        // Helper functions for new navigation\n        function showSongDrawer() {\n            if (elements.songDrawer) {\n                elements.songDrawer.hidden = false;\n            }\n        }\n        \n        function hideSongDrawer() {\n            if (elements.songDrawer) {\n                elements.songDrawer.hidden = true;\n            }\n        }\n        \n        function showZoomOverlay() {\n            if (elements.zoomOverlay) {\n                elements.zoomOverlay.hidden = false;\n            }\n        }\n        \n        function hideZoomOverlay() {\n            if (elements.zoomOverlay) {\n                elements.zoomOverlay.hidden = true;\n            }\n        }\n        \n        // Updated display functions for new UI\n        function updateCurrentSongDisplay() {\n            const songs = getSongs();\n            if (currentIndex >= 0 && currentIndex < songs.length) {\n                const songTitle = songs[currentIndex];\n                if (elements.currentSongTitle) {\n                    elements.currentSongTitle.textContent = songTitle;\n                }\n                if (elements.songCounter) {\n                    elements.songCounter.textContent = `${currentIndex + 1} / ${songs.length}`;\n                }\n            }\n        }\n\n        // Wire events\n                elements.prev.addEventListener(\"click\", selectPrev);\n                elements.next.addEventListener(\"click\", selectNext);\n                document.addEventListener(\"keydown\", handleKeyboard);\n                elements.image.addEventListener(\"error\", () => {\n                    showFallback();\n                    hideLoadingOverlay();\n                });\n                elements.image.addEventListener(\"load\", function(){\n                        // Ensure fallback is hidden when image loads successfully\n                        elements.fallback.hidden = true;\n                        elements.image.hidden = false;\n                        elements.image.classList.remove('is-loading');\n                        elements.image.classList.add('is-loaded');\n                        \n                        // Small delay to avoid flicker on fast loads\n                        setTimeout(() => {\n                            hideLoadingOverlay();\n                        }, 100);\n                });\n\n                // No landing logic; standalone mainmenu.html is used now\n                elements.search.addEventListener(\"input\", applySearchFilter);\n                const clearBtn = document.getElementById('clearSearch');\n                if(clearBtn){ clearBtn.addEventListener('click', () => { elements.search.value=''; applySearchFilter(); elements.search.focus(); }); }\n                document.addEventListener('keydown', (e)=>{ if(e.key==='Escape'){ elements.search.value=''; applySearchFilter(); elements.search.focus(); }});\n                \n                // Search options panel\n                const searchOptionsBtn = document.getElementById('searchOptionsBtn');\n                const searchOptionsPanel = document.getElementById('searchOptionsPanel');\n                \n                if(searchOptionsBtn && searchOptionsPanel){\n                    searchOptionsBtn.addEventListener('click', () => {\n                        searchOptionsPanel.hidden = !searchOptionsPanel.hidden;\n                    });\n                    \n                    // Close options panel when clicking outside\n                    document.addEventListener('click', (e) => {\n                        if (!searchOptionsBtn.contains(e.target) && !searchOptionsPanel.contains(e.target)) {\n                            searchOptionsPanel.hidden = true;\n                        }\n                    });\n                    \n                    // Re-apply search when options change\n                    ['fuzzySearch', 'searchInFavorites', 'caseSensitive'].forEach(id => {\n                        const checkbox = document.getElementById(id);\n                        if (checkbox) {\n                            checkbox.addEventListener('change', applySearchFilter);\n                        }\n                    });\n                }\n                // Help overlay\n                const helpBtn = document.getElementById('helpBtn');\n                const help = document.getElementById('helpOverlay');\n                const helpClose = document.getElementById('helpClose');\n                helpBtn?.addEventListener('click', ()=>{ help.hidden = false; });\n                helpClose?.addEventListener('click', ()=>{ help.hidden = true; });\n                document.addEventListener('keydown', (e)=>{ if(e.key==='?' || (e.key.toLowerCase()==='/' && (e.shiftKey))){ help.hidden=false; }});\n        // URL params to preset collection/tab/open list/focus search and song select\n                try{\n                        const params = new URLSearchParams(location.search);\n            const col = params.get('collection');\n            if(col && (collections[col])) setCollection(col);\n                        const view = params.get('view');\n                        if(view === 'fav') setTab('fav');\n                        if(view === 'recent') setTab('recent');\n                        if(params.get('openList') === '1'){ showSongDrawer(); setTimeout(()=>elements.search?.focus(),100); }\n            const presetSearch = params.get('search');\n            if(presetSearch){ elements.search.value = ''; setTimeout(()=>{ elements.search.value=''; elements.search.focus(); }, 50); }\n            const songParam = params.get('song');\n            if(songParam){\n                const songs = getSongs();\n                let idx = -1;\n                if(/^[0-9]+$/.test(songParam)){\n                    idx = Math.max(0, Math.min(songs.length-1, parseInt(songParam,10)-1));\n                }else{\n                    const lower = songParam.toLowerCase();\n                    idx = songs.findIndex(t => t.toLowerCase() === lower);\n                    if(idx === -1) idx = songs.findIndex(t => t.toLowerCase().includes(lower));\n                }\n                if(idx >= 0) selectIndex(idx);\n            }\n                }catch(_){ }\n                // Song list drawer toggle\n                elements.toggleList?.addEventListener(\"click\", function(){\n                        showSongDrawer();\n                });\n                \n                // Close drawer events\n                elements.closeDrawerBtn?.addEventListener('click', hideSongDrawer);\n                elements.drawerBackdrop?.addEventListener('click', hideSongDrawer);\n                \n                // Search button in header\n                elements.searchBtn?.addEventListener('click', function() {\n                    showSongDrawer();\n                    setTimeout(() => elements.search?.focus(), 100);\n                });\n                \n                // Favorite button in header\n                elements.favoriteBtn?.addEventListener('click', toggleFavorite);\n                \n                // Zoom button and controls\n                elements.zoomBtn?.addEventListener('click', showZoomOverlay);\n                elements.closeZoomBtn?.addEventListener('click', hideZoomOverlay);\n                elements.zoomBackdrop?.addEventListener('click', hideZoomOverlay);\n        // Tabs in drawer\n                elements.tabAll?.addEventListener('click', () => setTab('all'));\n                elements.tabFav?.addEventListener('click', () => setTab('fav'));\n                \n                // Clear search button\n                elements.clearSearchBtn?.addEventListener('click', function() {\n                    elements.search.value = '';\n                    elements.clearSearchBtn.hidden = true;\n                    applySearchFilter();\n                });\n                \n                // Show/hide clear button based on search input\n                elements.search?.addEventListener('input', function() {\n                    const hasText = elements.search.value.trim().length > 0;\n                    if (elements.clearSearchBtn) {\n                        elements.clearSearchBtn.hidden = !hasText;\n                    }\n                });\n        // Random & Share\n        elements.randomBtn?.addEventListener('click', () => {\n            const songs = getSongs();\n            if(!songs.length) return;\n            const r = Math.floor(Math.random() * songs.length);\n            selectIndex(r);\n        });\n                        elements.shareBtn?.addEventListener('click', async () => {\n            const url = buildSongUrl();\n            try{\n                if(navigator.share){\n                    await navigator.share({ title: 'Music Club', url });\n                }else{\n                    await navigator.clipboard.writeText(url);\n                                                showToast('Link copied');\n                }\n            }catch(_){\n                try{ await navigator.clipboard.writeText(url); }catch(_e){}\n            }\n        });\n        // Enhanced image controls event listeners\n        document.getElementById('zoomInBtn')?.addEventListener('click', zoomIn);\n        document.getElementById('zoomOutBtn')?.addEventListener('click', zoomOut);\n        document.getElementById('resetZoomBtn')?.addEventListener('click', resetZoom);\n        document.getElementById('fullscreenBtn')?.addEventListener('click', toggleFullscreen);\n        document.getElementById('fitToScreenBtn')?.addEventListener('click', fitToScreen);\n        \n        // Initialize image dragging\n        handleImageDrag();\n        \n        // Keyboard shortcuts for image controls\n        document.addEventListener('keydown', (e) => {\n            if (e.target.tagName === 'INPUT') return; // Don't interfere with search input\n            \n            switch(e.key) {\n                case '+': case '=': e.preventDefault(); zoomIn(); break;\n                case '-': e.preventDefault(); zoomOut(); break;\n                case '0': e.preventDefault(); resetZoom(); break;\n                case 'F11': e.preventDefault(); toggleFullscreen(); break;\n            }\n            \n            // Ctrl+0 for fit to screen\n            if (e.ctrlKey && e.key === '0') {\n                e.preventDefault();\n                fitToScreen();\n            }\n        });\n        \n        // Mouse wheel zoom support\n        const imageViewer = document.querySelector('.image-container');\n        imageViewer?.addEventListener('wheel', (e) => {\n            if (e.ctrlKey || e.metaKey) {\n                e.preventDefault();\n                if (e.deltaY < 0) {\n                    zoomIn();\n                } else {\n                    zoomOut();\n                }\n            }\n        }, { passive: false });\n\n        // Enhanced mobile touch gestures\n        let touchStartX = null;\n        let touchStartY = null;\n        let touchStartTime = null;\n        let lastTapTime = 0;\n        let isPinching = false;\n        let initialPinchDistance = 0;\n        \n        function onTouchStart(e){\n                const touches = e.touches;\n                if(!touches) return;\n                \n                touchStartTime = Date.now();\n                \n                // Handle single touch\n                if(touches.length === 1){\n                    touchStartX = touches[0].clientX;\n                    touchStartY = touches[0].clientY;\n                }\n                \n                // Handle pinch gesture\n                if(touches.length === 2){\n                    isPinching = true;\n                    const dx = touches[0].clientX - touches[1].clientX;\n                    const dy = touches[0].clientY - touches[1].clientY;\n                    initialPinchDistance = Math.sqrt(dx * dx + dy * dy);\n                }\n        }\n        \n        function onTouchMove(e){\n                if(isPinching && e.touches.length === 2){\n                    e.preventDefault();\n                    const touches = e.touches;\n                    const dx = touches[0].clientX - touches[1].clientX;\n                    const dy = touches[0].clientY - touches[1].clientY;\n                    const currentDistance = Math.sqrt(dx * dx + dy * dy);\n                    \n                    if(initialPinchDistance > 0){\n                        const scale = currentDistance / initialPinchDistance;\n                        const newZoom = currentZoom * scale;\n                        applyZoom(Math.max(0.5, Math.min(3, newZoom)));\n                        initialPinchDistance = currentDistance;\n                    }\n                }\n        }\n        \n        function onTouchEnd(e){\n                if(!touchStartX || !touchStartY || !touchStartTime) return;\n                \n                isPinching = false;\n                \n                const touchEndTime = Date.now();\n                const touchDuration = touchEndTime - touchStartTime;\n                \n                // Handle tap gestures\n                if(touchDuration < 300 && e.changedTouches && e.changedTouches[0]){\n                    const endTouch = e.changedTouches[0];\n                    const moveDistance = Math.sqrt(\n                        Math.pow(endTouch.clientX - touchStartX, 2) + \n                        Math.pow(endTouch.clientY - touchStartY, 2)\n                    );\n                    \n                    // Double tap to zoom\n                    if(moveDistance < 10){\n                        const now = Date.now();\n                        if(now - lastTapTime < 300){\n                            if(currentZoom === 1){\n                                applyZoom(2);\n                            } else {\n                                resetZoom();\n                            }\n                            lastTapTime = 0;\n                            touchStartX = touchStartY = null;\n                            return;\n                        }\n                        lastTapTime = now;\n                    }\n                }\n                \n                // Handle swipe gestures\n                if(e.changedTouches && e.changedTouches[0] && touchDuration > 50){\n                    const dx = e.changedTouches[0].clientX - touchStartX;\n                    const dy = e.changedTouches[0].clientY - touchStartY;\n                    const absX = Math.abs(dx);\n                    const absY = Math.abs(dy);\n                    \n                    // Improved swipe detection with velocity consideration\n                    const velocity = absX / touchDuration;\n                    const minSwipeDistance = 50;\n                    const minVelocity = 0.1;\n                    \n                    if(absX > minSwipeDistance && absX > absY * 1.5 && velocity > minVelocity){\n                        // Provide visual feedback\n                        const viewer = document.querySelector('.viewer');\n                        viewer.style.transform = dx > 0 ? 'translateX(5px)' : 'translateX(-5px)';\n                        setTimeout(() => { viewer.style.transform = ''; }, 150);\n                        \n                        // Navigate\n                        if(dx < 0) {\n                            selectNext();\n                            showToast('Next song', 'info');\n                        } else {\n                            selectPrev(); \n                            showToast('Previous song', 'info');\n                        }\n                    }\n                }\n                \n                touchStartX = touchStartY = touchStartTime = null;\n        }\n        \n        // Enhanced mobile keyboard handling\n        function handleMobileKeyboard(){\n            const searchInput = elements.search;\n            \n            // Prevent zoom on focus (iOS)\n            searchInput.addEventListener('focus', () => {\n                const viewport = document.querySelector('meta[name=\"viewport\"]');\n                viewport.content = 'width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no';\n            });\n            \n            searchInput.addEventListener('blur', () => {\n                const viewport = document.querySelector('meta[name=\"viewport\"]');\n                viewport.content = 'width=device-width, initial-scale=1, viewport-fit=cover, user-scalable=no';\n            });\n        }\n        \n        // Initialize mobile enhancements\n        if('ontouchstart' in window){\n            handleMobileKeyboard();\n        }\n        \n        // Attach to viewer area for better UX\n        const touchViewer = document.querySelector(\".viewer__image-wrap\");\n        // Disabled old touch handlers - using unified addPinchZoom() instead\n        // touchViewer.addEventListener(\"touchstart\", onTouchStart, {passive:false});\n        // touchViewer.addEventListener(\"touchmove\", onTouchMove, {passive:false});\n        // touchViewer.addEventListener(\"touchend\", onTouchEnd, {passive:true});\n    // Remove mobile zoom gestures\n\n// Enhanced image viewer with zoom functionality\nlet currentZoom = 1;\nlet imageTranslateX = 0;\nlet imageTranslateY = 0;\nlet isDragging = false;\nlet dragStartX = 0;\nlet dragStartY = 0;\n\nfunction applyZoom(zoomLevel, reset = false) {\n    if (reset) {\n        currentZoom = zoomLevel || 1;\n        imageTranslateX = 0;\n        imageTranslateY = 0;\n    } else {\n        // Respect the passed zoom level parameter\n        currentZoom = Math.max(0.5, Math.min(5, zoomLevel || currentZoom));\n    }\n\n    const img = elements.image;\n    const zoomIndicator = document.getElementById('zoomIndicator');\n    const zoomLevelDisplay = document.getElementById('zoomLevelDisplay');\n    const imageWrap = img.parentElement;\n    \n    // Fix transform order: translate first, then scale (with transform-origin center)\n    img.style.transformOrigin = 'center center';\n    img.style.transform = `translate(${imageTranslateX}px, ${imageTranslateY}px) scale(${currentZoom})`;\n    \n    // Update zoom level displays\n    const zoomPercentage = `${Math.round(currentZoom * 100)}%`;\n    if (document.getElementById('zoomLevel')) {\n        document.getElementById('zoomLevel').textContent = zoomPercentage;\n    }\n    if (zoomLevelDisplay) {\n        zoomLevelDisplay.textContent = zoomPercentage;\n    }\n    \n    // Show zoom indicator when zoomed\n    if (currentZoom !== 1) {\n        if (zoomIndicator) {\n            zoomIndicator.hidden = false;\n            setTimeout(() => { zoomIndicator.hidden = true; }, 2000);\n        }\n        imageWrap.classList.add('zoomed');\n    } else {\n        if (zoomIndicator) zoomIndicator.hidden = true;\n        imageWrap.classList.remove('zoomed');\n    }\n}\n\nfunction showLoadingOverlay() {\n    const overlay = document.getElementById('imageLoadingOverlay');\n    const viewer = document.querySelector('.viewer');\n    overlay.hidden = false;\n    viewer.setAttribute('aria-busy', 'true');\n}\n\nfunction hideLoadingOverlay() {\n    const overlay = document.getElementById('imageLoadingOverlay');\n    const viewer = document.querySelector('.viewer');\n    overlay.hidden = true;\n    viewer.setAttribute('aria-busy', 'false');\n}\n\nfunction zoomIn() {\n    applyZoom(currentZoom * 1.25);\n    showImageControls(); // Show controls when zooming\n}\n\nfunction zoomOut() {\n    applyZoom(currentZoom * 0.8);\n    showImageControls(); // Show controls when zooming\n}\n\nfunction resetZoom() {\n    applyZoom(1, true);\n    showImageControls(); // Show controls when resetting\n}\n\n// Enhanced fullscreen functionality\nfunction toggleFullscreen() {\n    const imageContainer = document.getElementById('imageContainer');\n    \n    if (!isFullscreen) {\n        // Enter fullscreen\n        isFullscreen = true;\n        imageContainer.classList.add('fullscreen-mode');\n        document.body.style.overflow = 'hidden';\n        \n        // Try to use browser fullscreen API if available\n        if (imageContainer.requestFullscreen) {\n            imageContainer.requestFullscreen().catch(() => {\n                // Fallback to CSS fullscreen if browser fullscreen fails\n            });\n        } else if (imageContainer.webkitRequestFullscreen) {\n            imageContainer.webkitRequestFullscreen();\n        } else if (imageContainer.msRequestFullscreen) {\n            imageContainer.msRequestFullscreen();\n        }\n        \n        // Update button icon\n        const fullscreenBtn = document.getElementById('fullscreenBtn');\n        if (fullscreenBtn) fullscreenBtn.innerHTML = '⛶';\n        \n        showImageControls();\n    } else {\n        // Exit fullscreen\n        exitFullscreen();\n    }\n}\n\nfunction exitFullscreen() {\n    const imageContainer = document.getElementById('imageContainer');\n    \n    isFullscreen = false;\n    imageContainer.classList.remove('fullscreen-mode');\n    document.body.style.overflow = '';\n    \n    // Exit browser fullscreen if active\n    if (document.exitFullscreen) {\n        document.exitFullscreen().catch(() => {});\n    } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    }\n    \n    // Update button icon\n    const fullscreenBtn = document.getElementById('fullscreenBtn');\n    if (fullscreenBtn) fullscreenBtn.innerHTML = '⛶';\n}\n\n// Fit image to screen while maintaining aspect ratio\nfunction fitToScreen() {\n    const img = elements.image;\n    const container = document.getElementById('imageContainer');\n    \n    if (!img || !img.naturalWidth || !img.naturalHeight) return;\n    \n    const containerRect = container.getBoundingClientRect();\n    \n    // Calculate target zoom to fit image within container (90% of available space)\n    const targetZoom = Math.min(\n        (containerRect.width * 0.9) / img.naturalWidth,\n        (containerRect.height * 0.9) / img.naturalHeight\n    );\n    \n    // Reset position and apply zoom\n    imageTranslateX = 0;\n    imageTranslateY = 0;\n    applyZoom(Math.max(0.5, Math.min(5, targetZoom)), true);\n    \n    if (window.showImageControls) showImageControls();\n}\n\n// Add pinch-to-zoom support for mobile with conflict prevention\nfunction addPinchZoom() {\n    const img = elements.image;\n    let initialDistance = 0;\n    let initialZoom = 1;\n    let isPinching = false;\n    \n    function getTouchDistance(touches) {\n        const dx = touches[0].clientX - touches[1].clientX;\n        const dy = touches[0].clientY - touches[1].clientY;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    \n    function onTouchStart(e) {\n        if (e.touches.length === 2) {\n            e.preventDefault();\n            isPinching = true;\n            // Cancel any ongoing drag\n            if (isDragging) {\n                isDragging = false;\n                img.parentElement.classList.remove('dragging');\n            }\n            initialDistance = getTouchDistance(e.touches);\n            initialZoom = currentZoom;\n            showImageControls();\n        }\n    }\n    \n    function onTouchMove(e) {\n        if (e.touches.length === 2 && isPinching) {\n            e.preventDefault();\n            const distance = getTouchDistance(e.touches);\n            const scale = distance / initialDistance;\n            const newZoom = Math.max(0.5, Math.min(5, initialZoom * scale));\n            applyZoom(newZoom);\n        }\n    }\n    \n    function onTouchEnd(e) {\n        if (e.touches.length < 2) {\n            isPinching = false;\n        }\n    }\n    \n    img.addEventListener('touchstart', onTouchStart, { passive: false });\n    img.addEventListener('touchmove', onTouchMove, { passive: false });\n    img.addEventListener('touchend', onTouchEnd, { passive: false });\n    \n    // Export for conflict detection\n    window.isPinching = () => isPinching;\n}\n\nfunction toggleFullscreen() {\n    const viewer = document.querySelector('.viewer');\n    \n    if (!document.fullscreenElement) {\n        if (viewer.requestFullscreen) {\n            viewer.requestFullscreen();\n            viewer.classList.add('fullscreen');\n        }\n    } else {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n            viewer.classList.remove('fullscreen');\n        }\n    }\n}\n\n// Enhanced image dragging for zoomed images with better mobile support\nfunction handleImageDrag() {\n    const img = elements.image;\n    const imageWrap = img.parentElement;\n    \n    let startX, startY, initialTranslateX, initialTranslateY;\n    let dragStartTime = 0;\n    let hasMoved = false;\n    \n    function onPointerStart(clientX, clientY, e) {\n        if (currentZoom <= 1) return;\n        // Don't start drag if pinching\n        if (window.isPinching && window.isPinching()) return;\n        e?.preventDefault();\n        isDragging = true;\n        hasMoved = false;\n        dragStartTime = Date.now();\n        startX = clientX;\n        startY = clientY;\n        initialTranslateX = imageTranslateX;\n        initialTranslateY = imageTranslateY;\n        \n        imageWrap.classList.add('dragging');\n        img.style.cursor = 'grabbing';\n        \n        // Show controls when starting to drag\n        showImageControls();\n    }\n    \n    function onPointerMove(clientX, clientY, e) {\n        if (!isDragging || currentZoom <= 1) return;\n        e?.preventDefault();\n        \n        const deltaX = clientX - startX;\n        const deltaY = clientY - startY;\n        \n        // Threshold for considering it a drag vs click\n        if (!hasMoved && (Math.abs(deltaX) > 5 || Math.abs(deltaY) > 5)) {\n            hasMoved = true;\n        }\n        \n        imageTranslateX = initialTranslateX + deltaX / currentZoom;\n        imageTranslateY = initialTranslateY + deltaY / currentZoom;\n        \n        // Apply bounds checking using natural image dimensions to prevent dragging too far\n        const wrapRect = imageWrap.getBoundingClientRect();\n        const imgNaturalWidth = img.naturalWidth || img.width;\n        const imgNaturalHeight = img.naturalHeight || img.height;\n        \n        // Guard against unloaded images (naturalWidth/Height = 0)\n        if (imgNaturalWidth === 0 || imgNaturalHeight === 0) {\n            // Image not loaded yet, skip bounds checking\n            applyZoom(currentZoom);\n            return;\n        }\n        \n        // Calculate displayed image size (respecting object-fit: contain behavior)\n        const aspectRatio = imgNaturalWidth / imgNaturalHeight;\n        const wrapAspectRatio = wrapRect.width / wrapRect.height;\n        \n        let displayedWidth, displayedHeight;\n        if (aspectRatio > wrapAspectRatio) {\n            displayedWidth = wrapRect.width;\n            displayedHeight = wrapRect.width / aspectRatio;\n        } else {\n            displayedWidth = wrapRect.height * aspectRatio;\n            displayedHeight = wrapRect.height;\n        }\n        \n        // Calculate max translation based on zoom level\n        const maxTranslateX = Math.max(0, (displayedWidth * currentZoom - wrapRect.width) / (2 * currentZoom));\n        const maxTranslateY = Math.max(0, (displayedHeight * currentZoom - wrapRect.height) / (2 * currentZoom));\n        \n        imageTranslateX = Math.max(-maxTranslateX, Math.min(maxTranslateX, imageTranslateX));\n        imageTranslateY = Math.max(-maxTranslateY, Math.min(maxTranslateY, imageTranslateY));\n        \n        applyZoom(currentZoom);\n    }\n    \n    function onPointerEnd() {\n        if (!isDragging) return;\n        isDragging = false;\n        imageWrap.classList.remove('dragging');\n        img.style.cursor = currentZoom > 1 ? 'grab' : '';\n        \n        // If it wasn't really a drag, consider it a click for showing controls\n        if (!hasMoved && Date.now() - dragStartTime < 300) {\n            setTimeout(() => toggleImageControls(), 10);\n        }\n    }\n    \n    // Mouse events\n    function onMouseDown(e) {\n        onPointerStart(e.clientX, e.clientY, e);\n    }\n    \n    function onMouseMove(e) {\n        onPointerMove(e.clientX, e.clientY, e);\n    }\n    \n    function onMouseUp() {\n        onPointerEnd();\n    }\n    \n    img.addEventListener('mousedown', onMouseDown);\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n    \n    // Touch events with improved support\n    function onTouchStart(e) {\n        if (currentZoom <= 1 || e.touches.length !== 1) return;\n        e.preventDefault();\n        const touch = e.touches[0];\n        onPointerStart(touch.clientX, touch.clientY, e);\n    }\n    \n    function onTouchMove(e) {\n        if (!isDragging || currentZoom <= 1 || e.touches.length !== 1) return;\n        e.preventDefault();\n        const touch = e.touches[0];\n        onPointerMove(touch.clientX, touch.clientY, e);\n    }\n    \n    function onTouchEnd(e) {\n        if (!isDragging) return;\n        e.preventDefault();\n        onPointerEnd();\n    }\n    \n    img.addEventListener('touchstart', onTouchStart, { passive: false });\n    img.addEventListener('touchmove', onTouchMove, { passive: false });\n    img.addEventListener('touchend', onTouchEnd, { passive: false });\n    \n    // Prevent context menu on long press when zoomed\n    img.addEventListener('contextmenu', (e) => {\n        if (currentZoom > 1) {\n            e.preventDefault();\n        }\n    });\n}\n\n// Toast notification system\nfunction showToast(message, type = 'info') {\n    const toast = document.getElementById('toast') || createToast();\n    toast.textContent = message;\n    toast.className = `toast ${type}`;\n    toast.hidden = false;\n    setTimeout(() => { toast.hidden = true; }, 3000);\n}\n\nfunction createToast() {\n    const toast = document.createElement('div');\n    toast.id = 'toast';\n    toast.className = 'toast';\n    toast.hidden = true;\n    document.body.appendChild(toast);\n    return toast;\n}\n\n    function toggleFavorite(){\n        const idx = currentIndex;\n        const favorites = getFavorites();\n        const pos = favorites.indexOf(idx);\n        if(pos === -1) favorites.push(idx); else favorites.splice(pos,1);\n        setFavorites(favorites);\n        updateFavUi();\n        renderList();\n    }\n        function updateFavUi(){\n        const isFav = getFavorites().includes(currentIndex);\n            if (elements.favoriteBtn) {\n                elements.favoriteBtn.textContent = isFav ? '❤' : '♡';\n                elements.favoriteBtn.classList.toggle('is-active', isFav);\n            }\n            // Legacy support for old element if it exists\n            if (elements.favToggle) {\n                elements.favToggle.textContent = isFav ? '❤' : '♡';\n            }\n        }\n        function pushRecent(idx){\n        const recent = [idx, ...getRecent().filter(i => i !== idx)].slice(0, 10);\n        setRecent(recent);\n        }\n\n        function setTab(tab){\n                activeTab = tab;\n        saveJson('activeTab', activeTab);\n        [elements.tabAll, elements.tabFav, elements.tabRecent].forEach(btn => { btn.classList.remove('is-active'); btn.removeAttribute('aria-current'); });\n                if(tab === 'all'){ elements.tabAll.classList.add('is-active'); elements.tabAll.setAttribute('aria-current','true'); }\n                if(tab === 'fav'){ elements.tabFav.classList.add('is-active'); elements.tabFav.setAttribute('aria-current','true'); }\n        if(tab === 'recent'){ elements.tabRecent.classList.add('is-active'); elements.tabRecent.setAttribute('aria-current','true'); }\n                renderList();\n        }\n\n        function setCollection(name){\n                currentCollection = name;\n        saveJson('lastCollection', currentCollection);\n        [elements.colMusicList, elements.colSaYar].forEach(btn => { btn.classList.remove('is-active'); btn.removeAttribute('aria-current'); });\n                if(name === 'Music Club Song List'){ elements.colMusicList.classList.add('is-active'); elements.colMusicList.setAttribute('aria-current','true'); }\n                if(name === 'Sa Yar Ga Toe Pwell'){ elements.colSaYar.classList.add('is-active'); elements.colSaYar.setAttribute('aria-current','true'); }\n                filteredIndexes = getSongs().map((_, i) => i);\n                currentIndex = 0;\n                renderList();\n                updateMeta();\n                loadImageForCurrent();\n        }\n\n    // removed 'new' feature\n\n    function buildSongUrl(){\n        const base = location.origin + location.pathname.replace(/[^\\/]*$/, '') + 'app.html';\n        const params = new URLSearchParams();\n        params.set('collection', currentCollection);\n        params.set('song', String(currentIndex + 1));\n        return `${base}?${params.toString()}`;\n    }\n\n    function showToast(message){\n        const t = document.getElementById('toast');\n        if(!t) return;\n        t.textContent = message;\n        t.hidden = false;\n        clearTimeout(showToast._tid);\n        showToast._tid = setTimeout(()=>{ t.hidden = true; }, 1400);\n    }\n\n    // Settings drawer removed\n\nfunction toggleFullscreen() {\n    const viewer = document.querySelector('.viewer');\n    \n    if (!document.fullscreenElement) {\n        if (viewer.requestFullscreen) {\n            viewer.requestFullscreen();\n        } else if (viewer.webkitRequestFullscreen) {\n            viewer.webkitRequestFullscreen();\n        } else if (viewer.mozRequestFullScreen) {\n            viewer.mozRequestFullScreen();\n        } else if (viewer.msRequestFullscreen) {\n            viewer.msRequestFullscreen();\n        }\n    } else {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        }\n    }\n}\n\n// Fullscreen event listeners\ndocument.addEventListener('fullscreenchange', handleFullscreenChange);\ndocument.addEventListener('webkitfullscreenchange', handleFullscreenChange);\ndocument.addEventListener('mozfullscreenchange', handleFullscreenChange);\ndocument.addEventListener('MSFullscreenChange', handleFullscreenChange);\n\nfunction handleFullscreenChange() {\n    const imageContainer = document.getElementById('imageContainer');\n    const browserIsFullscreen = !!(document.fullscreenElement || document.webkitFullscreenElement || \n                           document.mozFullScreenElement || document.msFullscreenElement);\n    \n    // Sync our internal state with browser fullscreen state\n    isFullscreen = browserIsFullscreen;\n    \n    // Toggle CSS class for fallback styling\n    if (imageContainer) {\n        imageContainer.classList.toggle('fullscreen-mode', browserIsFullscreen);\n    }\n    \n    // Update controls visibility \n    if (isFullscreen && window.showImageControls) {\n        showImageControls();\n    }\n}\n\n        // Simple image controls toggle functionality\n        let controlsTimeout;\n        let imageControlsVisible = true;\n        \n        function showImageControls() {\n            const controls = document.querySelector('.image-controls');\n            if (!controls) return;\n            \n            controls.classList.remove('hidden');\n            controls.classList.add('visible');\n            imageControlsVisible = true;\n            \n            // Clear existing timeout\n            clearTimeout(controlsTimeout);\n            \n            // Auto-hide after 4 seconds if not in fullscreen and on mobile\n            const isFullscreen = !!(document.fullscreenElement || document.webkitFullscreenElement || \n                                   document.mozFullScreenElement || document.msFullscreenElement);\n            if (!isFullscreen && window.innerWidth <= 768) {\n                controlsTimeout = setTimeout(() => {\n                    hideImageControls();\n                }, 4000);\n            }\n        }\n        \n        function hideImageControls() {\n            const controls = document.querySelector('.image-controls');\n            if (!controls) return;\n            \n            controls.classList.remove('visible');\n            controls.classList.add('hidden');\n            imageControlsVisible = false;\n        }\n        \n        function toggleImageControls() {\n            if (imageControlsVisible) {\n                hideImageControls();\n            } else {\n                showImageControls();\n            }\n        }\n        \n        // Show/hide controls when user taps the image area\n        function initImageClickHandler() {\n            const imageWrap = document.querySelector('.viewer__image-wrap');\n            if (imageWrap) {\n                imageWrap.addEventListener('click', (e) => {\n                    // Only toggle on tap/click if not dragging and not pinching\n                    if (!isDragging && (!window.isPinching || !window.isPinching())) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        toggleImageControls();\n                    }\n                });\n            }\n        }\n        \n        // Initialize enhanced image functionality\n        addPinchZoom();\n        handleImageDrag();\n        initImageClickHandler();\n        \n        // Show controls initially\n        showImageControls();\n\n        // NEW NAVIGATION SYSTEM EVENT LISTENERS\n        \n        // More Menu functionality\n        const moreMenuBtn = document.getElementById('moreMenuBtn');\n        const moreMenu = document.getElementById('moreMenu');\n        if(moreMenuBtn && moreMenu){\n            moreMenuBtn.addEventListener('click', (e) => {\n                e.stopPropagation();\n                moreMenu.hidden = !moreMenu.hidden;\n            });\n            \n            // Close more menu when clicking outside\n            document.addEventListener('click', (e) => {\n                if(!moreMenu.contains(e.target) && !moreMenuBtn.contains(e.target)){\n                    moreMenu.hidden = true;\n                }\n            });\n            \n            // Close more menu when pressing escape\n            document.addEventListener('keydown', (e) => {\n                if(e.key === 'Escape' && !moreMenu.hidden){\n                    moreMenu.hidden = true;\n                }\n            });\n        }\n        \n        // Update current song info in top controls\n        function updateCurrentSongInfo(){\n            const currentCollectionEl = document.getElementById('currentCollection');\n            const songPositionEl = document.getElementById('songPosition');\n            \n            if(currentCollectionEl){\n                currentCollectionEl.textContent = currentCollection;\n            }\n            \n            if(songPositionEl){\n                const songs = getSongs();\n                songPositionEl.textContent = `${currentIndex + 1} / ${songs.length}`;\n            }\n        }\n        \n        // Override updateMeta to also update current song info\n        const originalUpdateMeta = updateMeta;\n        updateMeta = function(){\n            originalUpdateMeta();\n            updateCurrentSongInfo();\n        };\n        \n        // Floating zoom controls visibility\n        const zoomControls = document.getElementById('zoomControls');\n        let zoomControlsTimeout;\n        \n        function showZoomControls(){\n            if(zoomControls){\n                zoomControls.classList.add('visible');\n                clearTimeout(zoomControlsTimeout);\n                \n                // Auto-hide after 3 seconds\n                zoomControlsTimeout = setTimeout(() => {\n                    hideZoomControls();\n                }, 3000);\n            }\n        }\n        \n        function hideZoomControls(){\n            if(zoomControls){\n                zoomControls.classList.remove('visible');\n            }\n        }\n        \n        // Show zoom controls when image is interacted with\n        const imageWrapEl = document.querySelector('.viewer__image-wrap');\n        if(imageWrapEl){\n            imageWrapEl.addEventListener('mouseenter', showZoomControls);\n            imageWrapEl.addEventListener('touchstart', showZoomControls);\n        }\n        \n        // Show zoom controls when zooming with wheel\n        if(imageViewer){\n            imageViewer.addEventListener('wheel', (e) => {\n                if(e.ctrlKey || e.metaKey){\n                    showZoomControls();\n                }\n            });\n        }\n        \n        // Bottom nav favorite updates are now handled by navigation.js\n        \n        // Haptic feedback is now handled by navigation.js\n        \n        // Enhanced touch gestures for song navigation\n        let touchStartXNav = null;\n        let touchStartYNav = null;\n        let touchStartTimeNav = null;\n        \n        function handleNavTouchStart(e){\n            if(e.touches.length === 1){\n                touchStartXNav = e.touches[0].clientX;\n                touchStartYNav = e.touches[0].clientY;\n                touchStartTimeNav = Date.now();\n            }\n        }\n        \n        function handleNavTouchEnd(e){\n            if(!touchStartXNav || !touchStartYNav || !touchStartTimeNav) return;\n            \n            const touchEndTime = Date.now();\n            const touchDuration = touchEndTime - touchStartTimeNav;\n            \n            if(touchDuration > 50 && touchDuration < 500 && e.changedTouches && e.changedTouches[0]){\n                const endTouch = e.changedTouches[0];\n                const deltaX = endTouch.clientX - touchStartXNav;\n                const deltaY = Math.abs(endTouch.clientY - touchStartYNav);\n                \n                // Horizontal swipe with minimal vertical movement\n                if(Math.abs(deltaX) > 50 && deltaY < 100){\n                    if(deltaX > 0){\n                        selectPrev(); // Swipe right = previous\n                    } else {\n                        selectNext(); // Swipe left = next\n                    }\n                    addHapticFeedback();\n                }\n            }\n            \n            touchStartXNav = touchStartYNav = touchStartTimeNav = null;\n        }\n        \n        // Add swipe navigation to main image area\n        if(imageWrapEl){\n            imageWrapEl.addEventListener('touchstart', handleNavTouchStart, {passive: true});\n            imageWrapEl.addEventListener('touchend', handleNavTouchEnd, {passive: true});\n        }\n        \n        // Initialize current song info on load\n        updateCurrentSongInfo();\n\n        // Initial render\n                renderList();\n                selectIndex(0);\n                updateFavUi();\n\n})();\n\n\n","size_bytes":68961},"server.py":{"content":"#!/usr/bin/env python3\n\"\"\"\nSimple HTTP server to serve the Music Club static website\n\"\"\"\n\nimport http.server\nimport socketserver\nimport os\nimport sys\n\n# Change to the directory containing the HTML files\nos.chdir(os.path.dirname(os.path.abspath(__file__)))\n\nclass MyHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):\n    def end_headers(self):\n        # Add headers to disable caching for development\n        self.send_header('Cache-Control', 'no-cache, no-store, must-revalidate')\n        self.send_header('Pragma', 'no-cache')\n        self.send_header('Expires', '0')\n        super().end_headers()\n\nif __name__ == '__main__':\n    PORT = 5000\n    HOST = '0.0.0.0'\n    \n    print(f\"Starting Music Club server at http://{HOST}:{PORT}\")\n    print(\"Server will serve files from the current directory\")\n    print(\"Press Ctrl+C to stop the server\\n\")\n    \n    try:\n        with socketserver.TCPServer((HOST, PORT), MyHTTPRequestHandler) as httpd:\n            httpd.allow_reuse_address = True\n            print(f\"Server running at http://{HOST}:{PORT}\")\n            httpd.serve_forever()\n    except KeyboardInterrupt:\n        print(\"\\nServer stopped.\")\n        sys.exit(0)\n    except Exception as e:\n        print(f\"Error starting server: {e}\")\n        sys.exit(1)","size_bytes":1264},"styles.css":{"content":":root{\n    /* Enhanced theme with richer colors */\n    --bg:#0a0f0b;\n    --panel:#111a14;\n    --panel-light:#1a2a1e;\n    --muted:#8fa592;\n    --text:#f0f8f1;\n    --text-bright:#ffffff;\n    --primary:#4abf6a; /* brighter green */\n    --primary-600:#3aa856;\n    --primary-700:#2f8b47;\n    --primary-soft:rgba(74, 191, 106, 0.15);\n    --border:#233028;\n    --border-light:#2a3d30;\n    --shadow:rgba(0, 0, 0, 0.6);\n    --shadow-soft:rgba(0, 0, 0, 0.3);\n    --success:#10b981;\n    --warning:#f59e0b;\n    --error:#ef4444;\n}\n[data-theme=\"light\"]{ --bg:#f8faf8; --panel:#ffffff; --text:#0e1510; --muted:#5d6a60; --border:#e5efe7; }\n[data-reduce-motion] *{ animation:none!important; transition:none!important }\n\n/* Ensure hidden elements never display */\n[hidden]{display:none !important}\n\n*{box-sizing:border-box}\nhtml,body{height:100%}\nbody{\n    margin:0;\n    font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Cantarell,'Helvetica Neue',Arial,'Noto Sans',sans-serif;\n    background:linear-gradient(135deg, var(--bg) 0%, #0d1410 50%, var(--bg) 100%);\n    color:var(--text);\n    -webkit-tap-highlight-color: transparent;\n    min-height:100vh;\n    line-height:1.7;\n    letter-spacing:0.015em;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n/* Enhanced Animations */\n@keyframes fadeIn{from{opacity:0;transform:scale(.98)}to{opacity:1;transform:scale(1)}}\n@keyframes slideUp{from{opacity:0;transform:translateY(8px)}to{opacity:1;transform:translateY(0)}}\n@keyframes panelIn{from{opacity:0;transform:translateY(-6px)}to{opacity:1;transform:translateY(0)}}\n@keyframes pulseIn{from{opacity:0;transform:scale(.96)}to{opacity:1;transform:scale(1)}}\n@keyframes shimmer{0%{background-position:-468px 0}100%{background-position:468px 0}}\n@keyframes glow{0%{box-shadow:0 0 20px rgba(74, 191, 106, 0.3)}50%{box-shadow:0 0 30px rgba(74, 191, 106, 0.6)}100%{box-shadow:0 0 20px rgba(74, 191, 106, 0.3)}}\n@keyframes float{0%{transform:translateY(0px)}50%{transform:translateY(-3px)}100%{transform:translateY(0px)}}\n@keyframes sparkle{0%{opacity:0;transform:scale(0)}50%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0)}}\n@-webkit-keyframes fadeIn{from{opacity:0;-webkit-transform:scale(.98)}to{opacity:1;-webkit-transform:scale(1)}}\n@-webkit-keyframes slideUp{from{opacity:0;-webkit-transform:translateY(8px)}to{opacity:1;-webkit-transform:translateY(0)}}\n@-webkit-keyframes pulseIn{from{opacity:0;-webkit-transform:scale(.96)}to{opacity:1;-webkit-transform:scale(1)}}\n/* Respect reduced motion but keep lightweight decorative EQ animation */\n@media (prefers-reduced-motion: reduce){\n    .card, .song-item, .viewer__controls, .viewer__image-wrap img, .app__toolbar, .loading-spinner {\n        animation:none!important;transition:none!important;\n    }\n}\n\n.app{display:flex;flex-direction:column;min-height:100vh}\n.landing{display:flex;align-items:center;justify-content:center;padding:40px 16px}\n.landing__card{background:var(--panel);border:1px solid var(--border);border-radius:16px;padding:24px 20px;max-width:420px;text-align:center;color:var(--text);box-shadow:0 10px 30px rgba(0,0,0,.35)}\n.landing__logo{width:96px;height:96px;border-radius:50%;border:1px solid var(--border);background:#0b0e13;object-fit:cover;margin-bottom:12px}\n.landing__title{margin:8px 0 6px 0}\n.landing__subtitle{margin:0 0 16px 0;color:var(--muted)}\n.landing__enter{width:100%}\n.home{\n    padding:20px;\n    max-width:1100px;\n    margin:0 auto;\n    background:\n        radial-gradient(800px 400px at 15% -5%, rgba(74, 191, 106, 0.15), transparent),\n        radial-gradient(600px 300px at 85% 105%, rgba(74, 191, 106, 0.1), transparent),\n        linear-gradient(135deg, rgba(74, 191, 106, 0.03) 0%, transparent 50%, rgba(74, 191, 106, 0.03) 100%);\n    position:relative;\n    overflow:hidden;\n}\n/* Removed animated gradient background for comfort */\n.home__hero{\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    text-align:center;\n    gap:12px;\n    margin:32px 0 40px 0;\n    position:relative;\n    z-index:2;\n}\n.home__logo{\n    width:120px;\n    height:120px;\n    border-radius:60px;\n    border:2px solid var(--border-light);\n    background:linear-gradient(135deg, #0d1410, #111a14);\n    object-fit:cover;\n    box-shadow:0 10px 40px var(--shadow-soft), inset 0 1px 0 rgba(255, 255, 255, 0.1);\n    transition:transform 0.3s ease, box-shadow 0.3s ease;\n    animation:float 6s ease-in-out infinite;\n}\n.home__logo:hover{\n    transform:scale(1.05);\n    box-shadow:0 15px 50px var(--shadow), 0 0 30px rgba(74, 191, 106, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.15);\n}\n.tagline{\n    font-size:13px;\n    color:var(--muted);\n    font-weight:500;\n    letter-spacing:0.05em;\n    text-transform:uppercase;\n    opacity:0.9;\n}\n.home__grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:16px}\n.card--primary{\n    border-color:var(--primary);\n    background:linear-gradient(135deg, rgba(74, 191, 106, 0.15) 0%, rgba(58, 168, 86, 0.2) 100%);\n    box-shadow:0 4px 20px var(--shadow-soft), 0 0 20px rgba(74, 191, 106, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1);\n}\n.card--primary:hover{\n    background:linear-gradient(135deg, rgba(74, 191, 106, 0.2) 0%, rgba(58, 168, 86, 0.25) 100%);\n    box-shadow:0 12px 40px var(--shadow), 0 0 30px rgba(74, 191, 106, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.15);\n    animation:glow 2s ease-in-out infinite;\n}\n.card--primary .card__title{color:var(--text-bright);font-weight:700;}\n/* Album art grid */\n.home__album-grid{display:grid;grid-template-columns:repeat(6, minmax(0,1fr));gap:10px;margin-top:24px;opacity:.9}\n.home__album-grid img{width:100%;aspect-ratio:1/1;object-fit:cover;border-radius:8px;border:1px solid var(--border);filter:blur(0.2px) saturate(1.05);transition:transform .2s ease, filter .2s ease}\n.home__album-grid img:hover{transform:scale(1.03);filter:saturate(1.2)}\n@media (max-width: 900px){.home__album-grid{grid-template-columns:repeat(3,1fr)}}\n.home__eq{display:flex;gap:5px;margin-top:12px;height:18px;align-items:flex-end}\n.home__eq span{display:block;width:6px;height:100%;background:var(--primary);border-radius:3px;transform-origin:bottom center;-webkit-transform-origin:bottom center;animation:eqPulse 1s ease-in-out infinite alternate}\n.home__eq span:nth-child(1){animation-delay:0s}\n.home__eq span:nth-child(2){animation-delay:.1s}\n.home__eq span:nth-child(3){animation-delay:.2s}\n.home__eq span:nth-child(4){animation-delay:.3s}\n.home__eq span:nth-child(5){animation-delay:.4s}\n@keyframes eqPulse{0%{transform:scaleY(.45);opacity:.85}50%{transform:scaleY(1.1);opacity:1}100%{transform:scaleY(.6);opacity:.9}}\n@-webkit-keyframes eqPulse{0%{-webkit-transform:scaleY(.45);opacity:.85}50%{-webkit-transform:scaleY(1.1);opacity:1}100%{-webkit-transform:scaleY(.6);opacity:.9}}\n.card:hover{transform:translateY(-2px) scale(1.02)}\n.card{\n    display:flex;\n    flex-direction:column;\n    justify-content:flex-start;\n    gap:12px;\n    padding:20px;\n    border:1px solid var(--border);\n    border-radius:16px;\n    background:linear-gradient(135deg, var(--panel) 0%, var(--panel-light) 100%);\n    text-decoration:none;\n    color:var(--text);\n    transition:all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    animation:slideUp .25s ease;\n    height:100%;\n    position:relative;\n    overflow:hidden;\n    backdrop-filter:blur(10px);\n    box-shadow:0 4px 20px var(--shadow-soft), inset 0 1px 0 rgba(255, 255, 255, 0.05);\n}\n.card:hover{\n    transform:translateY(-4px) scale(1.02);\n    background:linear-gradient(135deg, var(--panel-light) 0%, var(--panel) 100%);\n    border-color:var(--border-light);\n    box-shadow:0 12px 40px var(--shadow), 0 0 20px rgba(74, 191, 106, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.1);\n}\n.card:active{\n    transform:translateY(-2px) scale(1.01);\n    transition:all 0.1s ease;\n}\n/* gradient border sweep */\n.card::before{content:\"\";position:absolute;inset:0;border-radius:14px;padding:1px;background:linear-gradient(120deg, rgba(58,168,86,.0), rgba(58,168,86,.35), rgba(58,168,86,.0));-webkit-mask:linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);-webkit-mask-composite:xor;mask-composite:exclude;opacity:.0;transition:opacity .2s ease}\n.card:hover::before{opacity:.9}\n/* ripple for cards */\n.card::after{content:\"\";position:absolute;left:50%;top:50%;width:0;height:0;border-radius:50%;background:rgba(255,255,255,.15);transform:translate(-50%,-50%) scale(0);transition:transform .45s ease, opacity .6s ease;pointer-events:none}\n.card:active::after{width:220%;height:220%;transform:translate(-50%,-50%) scale(1);opacity:0}\n.card__icon{\n    font-size:32px;\n    margin-bottom:12px;\n    filter:drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));\n    transition:transform 0.3s ease, filter 0.3s ease;\n    animation: subtle-pulse 4s ease-in-out infinite;\n}\n.card:hover .card__icon{\n    transform:scale(1.1) translateY(-2px);\n    filter:drop-shadow(0 4px 8px rgba(0, 0, 0, 0.4));\n    animation: subtle-bounce 0.6s ease-in-out;\n}\n.card__title{\n    font-weight:700;\n    font-size:16px;\n    margin-bottom:6px;\n    color:var(--text-bright);\n    line-height:1.3;\n}\n.card__desc{\n    font-size:14px;\n    color:var(--muted);\n    line-height:1.5;\n}\n/* auto-fit handles responsive columns; keep a minimum card width */\n\n/* staggered entrance for cards */\n.home__grid .card{animation:slideUp .35s ease both}\n.home__grid .card:nth-child(1){animation-delay:.02s}\n.home__grid .card:nth-child(2){animation-delay:.06s}\n.home__grid .card:nth-child(3){animation-delay:.10s}\n.home__grid .card:nth-child(4){animation-delay:.14s}\n.home__grid .card:nth-child(5){animation-delay:.18s}\n.home__grid .card:nth-child(6){animation-delay:.22s}\n\n/* soft ambient background */\n.bg-soft{position:fixed;inset:0;z-index:-1;pointer-events:none;background:radial-gradient(800px 400px at 10% 10%, rgba(58,168,86,.08), transparent), radial-gradient(900px 500px at 90% 90%, rgba(58,168,86,.06), transparent);animation:bgDrift 26s ease-in-out infinite alternate}\n@keyframes bgDrift{from{background-position:0 0, 0 0}to{background-position:30px -20px, -20px 30px}}\n@-webkit-keyframes bgDrift{from{background-position:0 0, 0 0}to{background-position:30px -20px, -20px 30px}}\n\n@media (prefers-reduced-motion: reduce){\n  .home__grid .card{animation:none}\n  .bg-soft{animation:none}\n}\n.app__header{\n    display:flex;\n    align-items:center;\n    justify-content:space-between;\n    flex-wrap:wrap;\n    gap:16px;\n    padding:20px 24px;\n    border-bottom:1px solid var(--border);\n    background:linear-gradient(135deg, var(--panel) 0%, var(--panel-light) 100%);\n    backdrop-filter:blur(20px);\n    box-shadow:0 4px 20px var(--shadow-soft), inset 0 1px 0 rgba(255, 255, 255, 0.05);\n    position:sticky;\n    top:0;\n    z-index:100;\n}\n.credit-badge{\n    font-weight:600;\n    color:var(--text);\n    background:linear-gradient(135deg, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.02) 100%);\n    border:1px solid var(--border);\n    padding:8px 14px;\n    border-radius:999px;\n    backdrop-filter:blur(10px);\n    box-shadow:0 2px 8px var(--shadow-soft), inset 0 1px 0 rgba(255, 255, 255, 0.05);\n    font-size:13px;\n    letter-spacing:0.025em;\n}\n.credit-badge strong{\n    color:var(--primary);\n    font-weight:700;\n}\n.brand{display:flex;align-items:center;gap:10px;min-width:0;flex:1 1 auto}\n.brand__logo{width:40px;height:40px;border-radius:50%;border:1px solid var(--border);background:#0b0e13;object-fit:cover}\n.app__title{\n    margin:0;\n    font-size:20px;\n    font-weight:700;\n    background:linear-gradient(135deg, var(--text-bright) 0%, var(--primary) 100%);\n    -webkit-background-clip:text;\n    -webkit-text-fill-color:transparent;\n    background-clip:text;\n    letter-spacing:0.02em;\n}\n.app__controls{display:flex;gap:8px}\n.app__toolbar{\n    display:flex;\n    gap:6px;\n    padding:8px 12px;\n    border-bottom:1px solid var(--border);\n    background:var(--panel);\n    position:sticky;\n    top:72px;\n    z-index:50;\n    animation:slideUp .25s ease;\n    box-shadow:0 6px 16px rgba(0,0,0,.35);\n}\n\n.btn{\n    background:linear-gradient(135deg, var(--primary) 0%, var(--primary-600) 100%);\n    color:white;\n    border:none;\n    padding:12px 18px;\n    border-radius:10px;\n    font-weight:600;\n    font-size:14px;\n    letter-spacing:0.025em;\n    position:relative;\n    overflow:hidden;\n    box-shadow:0 4px 12px rgba(74, 191, 106, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.15);\n    cursor:pointer;\n    transition:all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n    border:1px solid transparent;\n}\n.btn::before{\n    content:'';\n    position:absolute;\n    top:0;\n    left:-100%;\n    width:100%;\n    height:100%;\n    background:linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition:left 0.5s ease;\n}\n.btn:hover::before{\n    left:100%;\n}\n.btn:hover{\n    background:linear-gradient(135deg, var(--primary-600) 0%, var(--primary-700) 100%);\n    transform:translateY(-1px);\n    box-shadow:0 6px 20px rgba(74, 191, 106, 0.4), inset 0 1px 0 rgba(255, 255, 255, 0.2);\n}\n.btn--ghost{\n    background:rgba(255, 255, 255, 0.03);\n    color:var(--text);\n    border:1px solid var(--border);\n    backdrop-filter:blur(10px);\n    box-shadow:0 2px 8px var(--shadow-soft), inset 0 1px 0 rgba(255, 255, 255, 0.05);\n}\n.btn--ghost:hover{\n    background:rgba(74, 191, 106, 0.1);\n    border-color:var(--border-light);\n    color:var(--text-bright);\n    box-shadow:0 4px 12px var(--shadow), 0 0 15px rgba(74, 191, 106, 0.15), inset 0 1px 0 rgba(255, 255, 255, 0.1);\n}\n.btn--ghost.is-on{\n    background:var(--primary-soft);\n    border-color:var(--primary);\n    color:var(--primary);\n    box-shadow:0 4px 12px rgba(74, 191, 106, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.1);\n}\n.btn:active{transform:scale(.99)}\n.btn:focus-visible{outline:2px solid rgba(79,124,255,.5);outline-offset:2px;box-shadow:0 0 0 4px rgba(79,124,255,.15)}\n.btn--ghost:focus-visible{outline:2px solid rgba(79,124,255,.5);outline-offset:2px;box-shadow:0 0 0 4px rgba(79,124,255,.1)}\n\n/* Enhanced button states */\n.btn.ready {\n    box-shadow:0 4px 12px rgba(74, 191, 106, 0.4), inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 0 15px rgba(74, 191, 106, 0.2);\n}\n.btn.ready::before {\n    background:linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n}\n\n/* Micro-animations for delightful interactions */\n@keyframes subtle-bounce {\n    0%, 100% { transform: translateY(0); }\n    50% { transform: translateY(-2px); }\n}\n\n@keyframes subtle-pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.8; }\n}\n\n@keyframes gentle-glow {\n    0%, 100% { box-shadow: 0 4px 12px rgba(74, 191, 106, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.15); }\n    50% { box-shadow: 0 4px 12px rgba(74, 191, 106, 0.5), inset 0 1px 0 rgba(255, 255, 255, 0.2); }\n}\n\n.btn.ready:hover {\n    animation: gentle-glow 2s ease-in-out infinite;\n}\n\n/* Tap/click ripple */\n.btn::after{content:\"\";position:absolute;left:50%;top:50%;width:0;height:0;border-radius:50%;background:rgba(255,255,255,.3);transform:translate(-50%,-50%) scale(0);transition:transform .35s ease, opacity .5s ease;pointer-events:none}\n.btn:active::after{width:200%;height:200%;transform:translate(-50%,-50%) scale(1);opacity:0}\n\n.app__main{display:grid;grid-template-columns:320px 1fr;gap:0;min-height:0;flex:1;overflow:hidden}\n\n.sidebar{\n    border-right:1px solid var(--border);\n    background:linear-gradient(180deg,rgba(255,255,255,.02),rgba(255,255,255,0));\n    display:flex;flex-direction:column;min-height:0;overflow:auto;\n}\n.sidebar__search{position:sticky;top:0;z-index:2;padding:12px;border-bottom:1px solid var(--border);background:var(--panel)}\n.sidebar__search{display:flex;flex-direction:column;gap:8px}\n\n.search-input-wrapper{\n    display:flex;\n    gap:8px;\n    align-items:center;\n    position:relative;\n}\n\n.sidebar__search input{\n    width:100%;\n    padding:10px 12px;\n    border-radius:8px;\n    border:1px solid var(--border);\n    background:#0c0f14;\n    color:var(--text);\n    transition:border-color 0.2s ease, box-shadow 0.2s ease;\n}\n\n.sidebar__search input:focus{\n    border-color:var(--primary);\n    box-shadow:0 0 0 2px rgba(74, 191, 106, 0.2);\n    outline:none;\n}\n\n.sidebar__search .small{padding:8px 10px}\n\n.search-results-counter{\n    position:absolute;\n    right:50px;\n    top:50%;\n    transform:translateY(-50%);\n    font-size:11px;\n    color:var(--muted);\n    background:var(--panel);\n    padding:2px 6px;\n    border-radius:10px;\n    border:1px solid var(--border);\n    pointer-events:none;\n}\n\n.search-options{\n    display:flex;\n    align-items:center;\n    gap:8px;\n    position:relative;\n}\n\n.search-options-panel{\n    position:absolute;\n    top:100%;\n    right:0;\n    background:var(--panel);\n    border:1px solid var(--border);\n    border-radius:8px;\n    padding:8px;\n    box-shadow:0 8px 24px var(--shadow);\n    z-index:10;\n    min-width:180px;\n}\n\n.search-option{\n    display:flex;\n    align-items:center;\n    gap:8px;\n    padding:4px 0;\n    font-size:13px;\n    color:var(--text);\n    cursor:pointer;\n}\n\n.search-option input[type=\"checkbox\"]{\n    width:16px;\n    height:16px;\n    accent-color:var(--primary);\n}\n\n.search-option span{\n    user-select:none;\n}\n\n.search-match-highlight{\n    background:rgba(74, 191, 106, 0.3);\n    color:var(--text-bright);\n    font-weight:600;\n    padding:1px 2px;\n    border-radius:2px;\n}\n.song-list{list-style:decimal inside;margin:0;padding:8px;overflow:auto}\n.empty-state{padding:16px;color:var(--muted)}\n.song-item{\n    padding:8px 10px;\n    border-radius:10px;\n    cursor:pointer;\n    display:flex;\n    gap:8px;\n    align-items:center;\n    transition:all 0.2s ease;\n    border:1px solid transparent;\n}\n.song-item:hover{\n    background:rgba(74, 191, 106, 0.1);\n    border-color:rgba(74, 191, 106, 0.3);\n    transform:translateX(2px);\n    box-shadow:0 2px 8px var(--shadow-soft);\n}\n.song-item.active{\n    background:rgba(74, 191, 106, 0.2);\n    border-color:var(--primary);\n    color:var(--text-bright);\n    box-shadow:0 4px 12px rgba(74, 191, 106, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.1);\n}\n.song-item:active{transform:scale(.99)}\n.song-index{opacity:.7;width:28px;flex:0 0 auto;text-align:right}\n.song-title{flex:1 1 auto;min-width:0;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}\n/* removed new badge */\n.sidebar__tabs{display:flex;gap:8px;padding:8px;border-bottom:1px solid var(--border);position:sticky;top:58px;background:var(--panel);z-index:1;flex-wrap:wrap}\n.tab{padding:8px 12px;border-radius:999px;border:1px solid var(--border);background:transparent;color:var(--text);cursor:pointer}\n.tab.is-active{background:var(--primary);border-color:var(--primary);color:#fff}\n.tab[aria-current=\"true\"], .song-item.active{outline:2px solid rgba(79,124,255,.35);outline-offset:2px}\n\n.viewer{display:flex;flex-direction:column;min-width:0;min-height:0;overflow:hidden}\n.viewer__image-wrap{flex:1;display:flex;align-items:center;justify-content:center;min-height:0;padding:12px;overflow:hidden}\n.viewer__image-wrap img{\n    max-width:100%;\n    height:auto;\n    max-height:85vh;\n    border-radius:12px;\n    border:2px solid var(--border-light);\n    background:linear-gradient(135deg, #0d1410, #111a14);\n    display:block;\n    box-shadow:0 12px 48px var(--shadow), 0 0 30px rgba(74, 191, 106, 0.15);\n    transition:all 0.3s ease;\n    transform-origin:center center;\n}\n.viewer__image-wrap img:hover{\n    transform:scale(1.02);\n    box-shadow:0 12px 40px var(--shadow), 0 0 30px rgba(74, 191, 106, 0.15);\n}\n.viewer__image-wrap img.is-loading{\n    opacity:0.7;\n    filter:blur(1px);\n    background:linear-gradient(90deg, #111a14 25%, #1a2a1e 50%, #111a14 75%);\n    background-size:200% 100%;\n    animation:shimmer 2s infinite;\n}\n.viewer__image-wrap img.is-loaded{\n    opacity:1;\n    filter:none;\n}\n.viewer__image-wrap{position:relative}\n.viewer__controls{display:none}\n.viewer__image-wrap.zoomed img{cursor:grab}\n.viewer__image-wrap img{will-change:transform}\n\n/* Fullscreen-like fallback for mobile browsers without Fullscreen API */\n.app.fullscreen-like .app__header,\n.app.fullscreen-like .app__toolbar,\n.app.fullscreen-like .sidebar,\n.app.fullscreen-like .app__footer{display:none}\n.app.fullscreen-like .app__main{grid-template-columns:1fr}\n.song-item .badge{margin-left:6px;font-size:12px;opacity:.8}\n.viewer__fallback{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:8px;color:var(--muted)}\n.fallback__emoji{font-size:48px}\n.viewer__meta{display:flex;gap:12px;align-items:center;justify-content:space-between;padding:10px 16px;border-top:1px solid var(--border);color:var(--muted)}\n.viewer__meta{background:rgba(0,0,0,.25);backdrop-filter:saturate(120%) blur(6px);box-shadow:0 -6px 16px rgba(0,0,0,.35)}\n.meta__title{color:var(--text);font-weight:600}\n\n.app__footer{padding:12px 16px;border-top:1px solid var(--border);color:var(--muted);background:var(--panel);display:flex;justify-content:space-between;gap:12px;flex-wrap:wrap}\n/* Drawer removed */\n.credit{opacity:1;color:var(--text);font-weight:600}\n.credit strong{color:var(--primary)}\n\n@media (max-width: 900px){\n    .app__header{\n        gap:12px;\n        padding:16px 20px;\n    }\n    .app__controls{width:auto}\n    .app__title{\n        font-size:18px;\n        line-height:1.2;\n    }\n    .app__main{grid-template-columns:1fr}\n    .sidebar{order:2}\n    .viewer{order:1}\n    .viewer__image-wrap{\n        padding:12px;\n        min-height:60vh;\n        /* Enable better touch scrolling */\n        -webkit-overflow-scrolling:touch;\n        overscroll-behavior:contain;\n    }\n    .viewer__image-wrap img{\n        max-height:75vh;\n        border-radius:12px;\n        /* Smoother touch interactions */\n        touch-action:manipulation;\n    }\n    .btn{\n        padding:12px 16px;\n        font-size:14px;\n        min-height:48px; /* Increased for better touch targets */\n        min-width:48px;\n        /* Better touch feedback */\n        transition:transform 0.1s ease, background 0.15s ease;\n    }\n    .btn:active{\n        transform:scale(0.96);\n        background:rgba(74, 191, 106, 0.1);\n    }\n    .home__grid{\n        grid-template-columns:1fr;\n        gap:14px;\n    }\n    .card{\n        padding:20px;\n        border-radius:20px;\n        gap:10px;\n        /* Enhanced touch targets */\n        min-height:80px;\n    }\n    /* Enhanced mobile toolbar - auto-hide for better image viewing */\n    .app__toolbar{\n        position:sticky;\n        top:68px;\n        z-index:50;\n        background:linear-gradient(135deg, var(--panel) 0%, var(--panel-light) 100%);\n        backdrop-filter:blur(20px);\n        box-shadow:0 8px 20px var(--shadow);\n        /* Better mobile scrolling */\n        -webkit-overflow-scrolling:touch;\n        /* Auto-hide animation */\n        transition:transform 0.3s ease, opacity 0.3s ease;\n        transform:translateY(0);\n        opacity:1;\n    }\n    \n    /* Hide toolbar when scrolling down on mobile */\n    .scrolling-down .app__toolbar{\n        transform:translateY(-100%);\n        opacity:0;\n        pointer-events:none;\n    }\n    \n    /* Show toolbar when scrolling up or when tapped */\n    .scrolling-up .app__toolbar,\n    .toolbar-visible .app__toolbar{\n        transform:translateY(0);\n        opacity:1;\n        pointer-events:auto;\n    }\n    .app__toolbar .btn--ghost{\n        background:rgba(74, 191, 106, 0.08);\n        border-color:var(--border-light);\n        backdrop-filter:blur(10px);\n    }\n    .app__toolbar .btn--ghost:active{\n        background:rgba(74, 191, 106, 0.15);\n        transform:scale(0.96);\n    }\n    /* Ensure toolbar fits: allow wrapping and balanced widths */\n    .app__toolbar{display:flex;flex-wrap:wrap;gap:8px;padding:8px 10px}\n    .app__toolbar .btn{flex:1 1 calc(33.33% - 8px);min-width:100px}\n    @media (max-width: 520px){\n        .app__toolbar .btn{flex:1 1 calc(50% - 8px);min-width:120px}\n    }\n    \n    /* Enhanced mobile sidebar */\n    .sidebar{\n        background:var(--panel);\n        border-radius:16px 16px 0 0;\n        margin:0;\n        max-height:70vh;\n        overflow:auto;\n        -webkit-overflow-scrolling:touch;\n    }\n    \n    /* Mobile search enhancements */\n    .sidebar__search input{\n        font-size:16px; /* Prevents zoom on iOS */\n        padding:12px 16px;\n        border-radius:12px;\n    }\n    \n    /* Better mobile song list */\n    .song-list{\n        padding:8px 4px;\n    }\n    \n    .song-item{\n        padding:12px 16px;\n        margin-bottom:4px;\n        border-radius:8px;\n        min-height:52px; /* Better touch targets */\n        display:flex;\n        align-items:center;\n        gap:12px;\n    }\n    \n    .song-item:active{\n        background:rgba(74, 191, 106, 0.1);\n        transform:scale(0.98);\n    }\n    \n    /* Mobile-specific animations */\n    .sidebar.is-open{\n        animation:slideUpMobile 0.3s ease-out;\n    }\n    \n    @keyframes slideUpMobile{\n        from{\n            transform:translateY(100%);\n            opacity:0;\n        }\n        to{\n            transform:translateY(0);\n            opacity:1;\n        }\n    }\n}\n\n/* Enhanced Navigation Styles */\n.breadcrumb{\n    background:linear-gradient(135deg, rgba(255, 255, 255, 0.02) 0%, rgba(255, 255, 255, 0.01) 100%);\n    border-bottom:1px solid var(--border);\n    padding:8px 20px;\n    backdrop-filter:blur(10px);\n}\n.breadcrumb__list{\n    list-style:none;\n    margin:0;\n    padding:0;\n    display:flex;\n    align-items:center;\n    gap:8px;\n    max-width:1200px;\n    margin:0 auto;\n}\n.breadcrumb__item{\n    display:flex;\n    align-items:center;\n}\n.breadcrumb__link{\n    color:var(--muted);\n    text-decoration:none;\n    font-size:13px;\n    font-weight:500;\n    padding:4px 8px;\n    border-radius:6px;\n    transition:all 0.2s ease;\n    letter-spacing:0.025em;\n}\n.breadcrumb__link:hover{\n    color:var(--text-bright);\n    background:rgba(74, 191, 106, 0.1);\n}\n.breadcrumb__item--current .breadcrumb__link{\n    color:var(--primary);\n    background:rgba(74, 191, 106, 0.08);\n    font-weight:600;\n}\n.breadcrumb__separator{\n    color:var(--border-light);\n    font-size:12px;\n    opacity:0.6;\n}\n\n/* Back to Top Button */\n.back-to-top{\n    position:fixed;\n    bottom:24px;\n    right:24px;\n    width:52px;\n    height:52px;\n    background:linear-gradient(135deg, var(--primary) 0%, var(--primary-600) 100%);\n    border:none;\n    border-radius:50%;\n    color:white;\n    cursor:pointer;\n    box-shadow:0 4px 20px rgba(74, 191, 106, 0.4), 0 8px 32px var(--shadow);\n    backdrop-filter:blur(10px);\n    transition:all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    z-index:1000;\n    border:2px solid rgba(255, 255, 255, 0.1);\n}\n.back-to-top:hover{\n    transform:translateY(-2px) scale(1.05);\n    box-shadow:0 6px 25px rgba(74, 191, 106, 0.5), 0 12px 40px var(--shadow);\n    background:linear-gradient(135deg, var(--primary-600) 0%, var(--primary-700) 100%);\n}\n.back-to-top:active{\n    transform:translateY(0) scale(1.02);\n    transition:all 0.1s ease;\n}\n.back-to-top__icon{\n    font-size:20px;\n    font-weight:bold;\n    display:block;\n    line-height:1;\n}\n\n/* Quick Navigation Menu */\n.quick-nav{\n    position:fixed;\n    inset:0;\n    background:rgba(0, 0, 0, 0.6);\n    backdrop-filter:blur(8px);\n    z-index:2000;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    padding:20px;\n    animation:fadeIn 0.2s ease;\n}\n.quick-nav__panel{\n    background:linear-gradient(135deg, var(--panel) 0%, var(--panel-light) 100%);\n    border:1px solid var(--border-light);\n    border-radius:16px;\n    padding:20px;\n    max-width:400px;\n    width:100%;\n    box-shadow:0 20px 60px var(--shadow), 0 0 40px rgba(74, 191, 106, 0.1);\n    backdrop-filter:blur(20px);\n    animation:slideUp 0.3s ease;\n}\n.quick-nav__header{\n    display:flex;\n    align-items:center;\n    justify-content:space-between;\n    margin-bottom:16px;\n    padding-bottom:12px;\n    border-bottom:1px solid var(--border);\n}\n.quick-nav__header h3{\n    margin:0;\n    color:var(--text-bright);\n    font-size:16px;\n    font-weight:700;\n}\n.quick-nav__content{\n    display:flex;\n    flex-direction:column;\n    gap:4px;\n}\n.quick-nav__item{\n    display:flex;\n    align-items:center;\n    gap:12px;\n    padding:12px 16px;\n    border-radius:10px;\n    text-decoration:none;\n    color:var(--text);\n    background:transparent;\n    border:none;\n    cursor:pointer;\n    transition:all 0.2s ease;\n    font-size:14px;\n    width:100%;\n    text-align:left;\n}\n.quick-nav__item:hover{\n    background:rgba(74, 191, 106, 0.1);\n    color:var(--text-bright);\n    transform:translateX(2px);\n}\n.quick-nav__icon{\n    font-size:16px;\n    width:20px;\n    text-align:center;\n}\n.quick-nav__text{\n    flex:1;\n    font-weight:500;\n}\n.quick-nav__shortcut{\n    font-size:12px;\n    color:var(--muted);\n    background:rgba(255, 255, 255, 0.05);\n    padding:2px 6px;\n    border-radius:4px;\n    border:1px solid var(--border);\n    font-family:monospace;\n    letter-spacing:0.05em;\n}\n\n/* Enhanced Focus Indicators */\n.btn:focus-visible,\n.quick-nav__item:focus-visible,\n.breadcrumb__link:focus-visible{\n    outline:2px solid var(--primary);\n    outline-offset:2px;\n    box-shadow:0 0 0 4px rgba(74, 191, 106, 0.15);\n}\n\n/* Collapsible list on mobile */\n@media (max-width: 900px){\n    .sidebar{display:flex;order:2}\n    .sidebar.is-open{display:flex;animation:panelIn .25s ease}\n    /* Place viewer controls below the image, not on top of it */\n    .viewer__image-wrap{display:flex;flex-direction:column;align-items:center}\n    .viewer__controls{justify-content:center;gap:10px;padding-bottom:calc(12px + env(safe-area-inset-bottom, 0px))}\n    .viewer__controls .btn{padding:12px 14px}\n    /* Enable fullscreen button on mobile now */\n    .app__footer{padding-bottom:calc(10px + env(safe-area-inset-bottom, 0px))}\n    \n    /* Mobile Navigation */\n    .breadcrumb{\n        padding:6px 16px;\n    }\n    .breadcrumb__list{\n        gap:6px;\n    }\n    .breadcrumb__link{\n        font-size:12px;\n        padding:3px 6px;\n    }\n    .back-to-top{\n        bottom:20px;\n        right:20px;\n        width:48px;\n        height:48px;\n    }\n    .back-to-top__icon{\n        font-size:18px;\n    }\n    .quick-nav__panel{\n        margin:10px;\n        padding:16px;\n    }\n}\n\n/* Enhanced Image Controls and Loading States - auto-hide for better image viewing */\n.image-controls{\n    position:fixed;\n    bottom:30px;\n    left:50%;\n    transform:translateX(-50%) translateY(0);\n    z-index:1000;\n    background:rgba(0,0,0,.9);\n    border:1px solid rgba(255,255,255,.1);\n    border-radius:30px;\n    padding:12px 20px;\n    display:flex;\n    gap:10px;\n    justify-content:center;\n    backdrop-filter:blur(20px);\n    -webkit-backdrop-filter:blur(20px);\n    box-shadow:0 8px 32px rgba(0,0,0,0.6);\n    transition:transform 0.3s ease, opacity 0.3s ease;\n    opacity:1;\n    max-width:calc(100vw - 40px);\n}\n\n/* Simple hide/show for image controls */\n.image-controls.hidden{\n    transform:translateX(-50%) translateY(120%);\n    opacity:0;\n    pointer-events:none;\n}\n\n.image-controls.visible{\n    transform:translateX(-50%) translateY(0);\n    opacity:1;\n    pointer-events:auto;\n}\n\n.btn--small{\n    padding:6px 12px;\n    font-size:12px;\n    min-height:32px;\n    min-width:auto;\n    border-radius:8px;\n}\n\n.image-loading-overlay{\n    position:absolute;\n    top:0;\n    left:0;\n    right:0;\n    bottom:0;\n    background:rgba(0,0,0,0.8);\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n    gap:12px;\n    z-index:10;\n    backdrop-filter:blur(4px);\n}\n\n@keyframes spin{\n    0%{transform:rotate(0deg)}\n    100%{transform:rotate(360deg)}\n}\n\n.loading-spinner{\n    width:32px;\n    height:32px;\n    border:3px solid rgba(74, 191, 106, 0.3);\n    border-top:3px solid var(--primary);\n    border-radius:50%;\n    animation:spin 1s linear infinite;\n}\n\n.loading-text{\n    color:var(--text);\n    font-size:14px;\n    font-weight:500;\n}\n\n.zoom-indicator{\n    position:absolute;\n    top:16px;\n    right:16px;\n    background:rgba(0,0,0,0.8);\n    color:var(--text);\n    padding:6px 12px;\n    border-radius:20px;\n    font-size:12px;\n    font-weight:600;\n    backdrop-filter:blur(10px);\n    transition:opacity 0.3s ease;\n    z-index:5;\n}\n\n.viewer__image-wrap.zoomed{\n    cursor:grab;\n}\n\n.viewer__image-wrap.zoomed img{\n    cursor:grab;\n    transition:transform 0.1s ease;\n}\n\n.viewer__image-wrap.zoomed img:active{\n    cursor:grabbing;\n}\n\n/* Enhanced image states */\n.viewer__image-wrap img.zoom-transition{\n    transition:transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Fullscreen mode */\n.viewer.fullscreen{\n    position:fixed;\n    top:0;\n    left:0;\n    right:0;\n    bottom:0;\n    z-index:9999;\n    background:#000;\n    display:flex;\n    flex-direction:column;\n}\n\n.viewer.fullscreen .viewer__image-wrap{\n    padding:0;\n    height:100vh;\n    width:100vw;\n    position:relative;\n    overflow:hidden;\n    flex:1;\n}\n\n.viewer.fullscreen .viewer__image-wrap img{\n    width:100%;\n    height:100%;\n    object-fit:contain;\n    border-radius:0;\n    user-select:none;\n    -webkit-user-select:none;\n    -moz-user-select:none;\n    -ms-user-select:none;\n    transition:transform 0.2s ease-out;\n    transform-origin:center center;\n}\n\n/* Mobile image controls */\n@media (max-width: 900px){\n    .image-controls{\n        bottom:20px;\n        padding:10px 16px;\n        gap:8px;\n        border-radius:25px;\n    }\n    \n    .btn--small{\n        padding:8px 10px;\n        min-width:36px;\n        font-size:11px;\n    }\n    \n    .zoom-indicator{\n        top:12px;\n        right:12px;\n        padding:4px 8px;\n        font-size:11px;\n    }\n    \n    /* Enable fullscreen button on mobile now */\n}\n\n/* ===== NEW NAVIGATION SYSTEM ===== */\n\n/* Simplified Top Controls */\n.app__top-controls{\n    display:flex;\n    align-items:center;\n    justify-content:space-between;\n    padding:12px 20px;\n    background:var(--panel);\n    border-bottom:1px solid var(--border);\n    position:sticky;\n    top:0;\n    z-index:10;\n}\n\n.list-toggle{\n    display:flex;\n    align-items:center;\n    gap:8px;\n    padding:8px 12px;\n    border-radius:8px;\n    transition:all 0.2s ease;\n}\n\n.list-toggle:hover{\n    background:var(--primary-soft);\n    color:var(--primary);\n}\n\n.list-toggle__icon{\n    font-size:16px;\n}\n\n.list-toggle__text{\n    font-size:13px;\n    font-weight:500;\n}\n\n.current-song-info{\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    text-align:center;\n    flex:1;\n    margin:0 16px;\n}\n\n.current-song__collection{\n    font-size:12px;\n    color:var(--muted);\n    font-weight:500;\n    text-transform:uppercase;\n    letter-spacing:0.05em;\n}\n\n.current-song__position{\n    font-size:14px;\n    font-weight:600;\n    color:var(--text);\n    margin-top:2px;\n}\n\n/* Bottom Navigation */\n.bottom-nav{\n    position:fixed;\n    bottom:0;\n    left:0;\n    right:0;\n    background:linear-gradient(180deg, var(--panel) 0%, rgba(17, 26, 20, 0.95) 100%);\n    border-top:1px solid var(--border);\n    padding:8px 12px;\n    display:flex;\n    justify-content:space-around;\n    align-items:center;\n    backdrop-filter:blur(20px);\n    -webkit-backdrop-filter:blur(20px);\n    z-index:100;\n    box-shadow:0 -4px 20px var(--shadow-soft);\n}\n\n.bottom-nav__btn{\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    gap:4px;\n    padding:8px 6px;\n    background:transparent;\n    border:none;\n    color:var(--muted);\n    cursor:pointer;\n    transition:all 0.2s ease;\n    border-radius:8px;\n    min-width:48px;\n    position:relative;\n}\n\n.bottom-nav__btn:hover,\n.bottom-nav__btn:focus{\n    color:var(--primary);\n    background:var(--primary-soft);\n    transform:translateY(-1px);\n}\n\n.bottom-nav__btn:active{\n    transform:translateY(0);\n}\n\n.bottom-nav__btn.is-active{\n    color:var(--primary);\n    background:var(--primary-soft);\n}\n\n.bottom-nav__btn.is-favorite{\n    color:var(--error);\n    animation:pulse 0.3s ease;\n}\n\n.bottom-nav__icon{\n    font-size:18px;\n    line-height:1;\n}\n\n.bottom-nav__label{\n    font-size:10px;\n    font-weight:500;\n    line-height:1;\n    text-align:center;\n    white-space:nowrap;\n}\n\n/* Floating Zoom Controls */\n.zoom-controls{\n    position:fixed;\n    top:50%;\n    right:16px;\n    transform:translateY(-50%);\n    display:flex;\n    flex-direction:column;\n    gap:8px;\n    z-index:50;\n    opacity:0;\n    transition:opacity 0.3s ease;\n    pointer-events:none;\n}\n\n.zoom-controls.visible{\n    opacity:1;\n    pointer-events:auto;\n}\n\n.zoom-btn{\n    width:44px;\n    height:44px;\n    border-radius:22px;\n    background:rgba(17, 26, 20, 0.9);\n    border:1px solid var(--border);\n    color:var(--text);\n    font-size:16px;\n    font-weight:600;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    cursor:pointer;\n    transition:all 0.2s ease;\n    backdrop-filter:blur(10px);\n    -webkit-backdrop-filter:blur(10px);\n    box-shadow:0 4px 12px var(--shadow-soft);\n}\n\n.zoom-btn:hover{\n    background:var(--primary);\n    color:white;\n    transform:scale(1.05);\n    box-shadow:0 6px 20px var(--shadow);\n}\n\n.zoom-level-display{\n    background:rgba(17, 26, 20, 0.9);\n    border:1px solid var(--border);\n    border-radius:8px;\n    padding:4px 8px;\n    color:var(--text);\n    font-size:12px;\n    font-weight:600;\n    text-align:center;\n    backdrop-filter:blur(10px);\n    -webkit-backdrop-filter:blur(10px);\n    box-shadow:0 2px 8px var(--shadow-soft);\n    min-width:50px;\n}\n\n/* Enhanced Image Controls Overlay */\n.image-controls-overlay{\n    position:absolute;\n    top:12px;\n    right:12px;\n    display:flex;\n    flex-direction:column;\n    gap:8px;\n    z-index:10;\n    opacity:0;\n    transition:opacity 0.3s ease;\n    pointer-events:none;\n}\n\n.viewer__image-wrap:hover .image-controls-overlay,\n.image-controls-overlay:hover{\n    opacity:1;\n    pointer-events:auto;\n}\n\n.image-control-btn{\n    width:40px;\n    height:40px;\n    border-radius:20px;\n    background:rgba(17, 26, 20, 0.95);\n    border:1px solid var(--border);\n    color:var(--text);\n    font-size:16px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    cursor:pointer;\n    transition:all 0.2s ease;\n    backdrop-filter:blur(10px);\n    -webkit-backdrop-filter:blur(10px);\n    box-shadow:0 4px 12px var(--shadow-soft);\n}\n\n.image-control-btn:hover{\n    background:var(--primary);\n    color:white;\n    transform:scale(1.05);\n    box-shadow:0 6px 20px var(--shadow);\n}\n\n/* Enhanced Image Container for Better Focus */\n.viewer__image-wrap{\n    position:relative;\n    background:radial-gradient(ellipse at center, rgba(74, 191, 106, 0.03), transparent);\n    overflow:hidden;\n    cursor:grab;\n}\n\n.viewer__image-wrap.dragging{\n    cursor:grabbing;\n}\n\n.viewer__image-wrap img{\n    transition:transform 0.2s ease;\n    user-select:none;\n    -webkit-user-select:none;\n    -moz-user-select:none;\n    -ms-user-select:none;\n}\n\n/* Fullscreen Mode - Scoped to image container only */\n.viewer__image-wrap.fullscreen-mode{\n    position:fixed !important;\n    top:0 !important;\n    left:0 !important;\n    width:100vw !important;\n    height:100vh !important;\n    z-index:9999 !important;\n    background:var(--bg) !important;\n    margin:0 !important;\n    padding:20px !important;\n    box-sizing:border-box !important;\n    display:flex !important;\n    align-items:center !important;\n    justify-content:center !important;\n}\n\n.viewer__image-wrap.fullscreen-mode img{\n    max-width:100% !important;\n    max-height:100% !important;\n    object-fit:contain !important;\n}\n\n.viewer__image-wrap.fullscreen-mode .image-controls-overlay{\n    top:20px !important;\n    right:20px !important;\n}\n\n/* Mobile Optimizations */\n@media (max-width: 768px){\n    .image-controls-overlay{\n        top:8px;\n        right:8px;\n        gap:6px;\n    }\n    \n    .image-control-btn{\n        width:36px;\n        height:36px;\n        font-size:14px;\n    }\n    \n    .viewer__image-wrap{\n        padding:8px;\n    }\n    \n    .zoom-controls{\n        right:8px;\n        gap:6px;\n    }\n    \n    .zoom-btn{\n        width:40px;\n        height:40px;\n    }\n}\n\n.zoom-btn:active{\n    transform:scale(0.95);\n}\n\n/* More Menu */\n.more-menu{\n    position:fixed;\n    top:0;\n    left:0;\n    right:0;\n    bottom:0;\n    background:rgba(0, 0, 0, 0.6);\n    z-index:200;\n    display:flex;\n    align-items:flex-start;\n    justify-content:flex-end;\n    padding:16px;\n    animation:fadeIn 0.2s ease;\n}\n\n.more-menu__panel{\n    background:var(--panel);\n    border:1px solid var(--border);\n    border-radius:12px;\n    overflow:hidden;\n    box-shadow:0 10px 40px var(--shadow);\n    min-width:180px;\n    animation:slideUp 0.2s ease;\n}\n\n.more-menu__item{\n    display:flex;\n    align-items:center;\n    gap:12px;\n    padding:12px 16px;\n    background:transparent;\n    border:none;\n    color:var(--text);\n    text-decoration:none;\n    cursor:pointer;\n    transition:background 0.2s ease;\n    width:100%;\n    text-align:left;\n}\n\n.more-menu__item:hover{\n    background:var(--primary-soft);\n    color:var(--primary);\n}\n\n.more-menu__icon{\n    font-size:16px;\n    width:20px;\n    text-align:center;\n}\n\n.more-menu__text{\n    font-size:14px;\n    font-weight:500;\n}\n\n/* Hide old toolbar and image controls */\n.app__toolbar,\n.image-controls{\n    display:none;\n}\n\n/* Updated Sidebar - Hidden by Default */\n.sidebar--hidden{\n    transform:translateX(-100%);\n    pointer-events:none;\n}\n\n.sidebar__header{\n    display:flex;\n    align-items:center;\n    justify-content:space-between;\n    padding:16px 20px 12px 20px;\n    border-bottom:1px solid var(--border);\n    position:sticky;\n    top:0;\n    background:var(--panel);\n    z-index:5;\n}\n\n.sidebar__title{\n    font-size:16px;\n    font-weight:600;\n    margin:0;\n    color:var(--text);\n}\n\n/* Update main layout for new navigation */\n.app__main{\n    padding-bottom:80px; /* Account for bottom nav */\n}\n\n/* Better sidebar transition and overlay */\n.sidebar{\n    transition:transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.sidebar.is-open{\n    transform:translateX(0);\n    pointer-events:auto;\n}\n\n/* Add overlay when sidebar is open */\n.sidebar-overlay{\n    position:fixed;\n    top:0;\n    left:0;\n    right:0;\n    bottom:0;\n    background:rgba(0, 0, 0, 0.6);\n    z-index:25;\n    opacity:0;\n    pointer-events:none;\n    transition:opacity 0.3s ease;\n}\n\n.sidebar-overlay.is-visible{\n    opacity:1;\n    pointer-events:auto;\n}\n\n/* Always-draggable photo */\n.viewer__image-wrap img{\n    cursor:grab;\n    user-select:none;\n    -webkit-user-select:none;\n    -moz-user-select:none;\n    -ms-user-select:none;\n}\n\n.viewer__image-wrap img:active{\n    cursor:grabbing;\n}\n\n/* Enable fullscreen on mobile - remove previous restriction */\n.bottom-nav__btn{\n    display:flex; /* Show fullscreen button on mobile */\n}\n\n/* Mobile Optimizations */\n@media (max-width: 900px){\n    .app__top-controls{\n        padding:8px 16px;\n    }\n    \n    .list-toggle__text{\n        display:none;\n    }\n    \n    .current-song-info{\n        margin:0 12px;\n    }\n    \n    .current-song__collection{\n        font-size:10px;\n    }\n    \n    .current-song__position{\n        font-size:12px;\n    }\n    \n    .bottom-nav{\n        padding:6px 8px;\n    }\n    \n    .bottom-nav__btn{\n        padding:6px 4px;\n        min-width:44px;\n    }\n    \n    .bottom-nav__icon{\n        font-size:16px;\n    }\n    \n    .bottom-nav__label{\n        font-size:9px;\n    }\n    \n    .zoom-controls{\n        right:12px;\n        bottom:100px; /* Above bottom nav */\n        top:auto;\n        transform:none;\n    }\n    \n    .zoom-btn{\n        width:40px;\n        height:40px;\n        border-radius:20px;\n        font-size:14px;\n    }\n    \n    .more-menu{\n        padding:12px;\n        align-items:flex-end;\n    }\n    \n    .more-menu__panel{\n        width:100%;\n        max-width:300px;\n    }\n}\n\n/* Large Screen Adjustments */\n@media (min-width: 1200px){\n    .bottom-nav{\n        max-width:800px;\n        left:50%;\n        transform:translateX(-50%);\n        border-radius:20px 20px 0 0;\n        border-left:1px solid var(--border);\n        border-right:1px solid var(--border);\n    }\n    \n    .zoom-controls{\n        right:24px;\n    }\n    \n    .zoom-btn{\n        width:48px;\n        height:48px;\n        border-radius:24px;\n    }\n}\n\n/* Accessibility improvements */\n@media (prefers-reduced-motion: reduce){\n    .bottom-nav__btn,\n    .zoom-btn,\n    .more-menu,\n    .more-menu__panel{\n        animation:none;\n        transition:none;\n    }\n}\n\n/* Touch interactions */\n.bottom-nav__btn,\n.zoom-btn{\n    -webkit-tap-highlight-color:transparent;\n    touch-action:manipulation;\n}\n\n/* ===== NEW SIMPLIFIED NAVIGATION STYLES ===== */\n\n/* Simple Clean Header */\n.simple-header {\n    position: sticky;\n    top: 0;\n    z-index: 100;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 12px 16px;\n    background: linear-gradient(135deg, var(--panel) 0%, var(--panel-light) 100%);\n    border-bottom: 1px solid var(--border);\n    backdrop-filter: blur(20px);\n    box-shadow: 0 4px 20px var(--shadow-soft);\n}\n\n.header-left .home-btn {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    padding: 8px 12px;\n    background: transparent;\n    border: 1px solid var(--border);\n    border-radius: 8px;\n    color: var(--text);\n    text-decoration: none;\n    font-size: 14px;\n    font-weight: 500;\n    transition: all 0.2s ease;\n}\n\n.header-left .home-btn:hover {\n    background: var(--primary-soft);\n    color: var(--primary);\n    transform: translateY(-1px);\n}\n\n.header-center {\n    flex: 1;\n    text-align: center;\n    padding: 0 16px;\n}\n\n.current-song-title {\n    font-size: 16px;\n    font-weight: 600;\n    color: var(--text-bright);\n    margin-bottom: 2px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.song-counter {\n    font-size: 12px;\n    color: var(--muted);\n    font-weight: 500;\n}\n\n.header-right {\n    display: flex;\n    gap: 8px;\n}\n\n.header-btn {\n    width: 36px;\n    height: 36px;\n    border-radius: 8px;\n    background: transparent;\n    border: 1px solid var(--border);\n    color: var(--text);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    font-size: 14px;\n}\n\n.header-btn:hover {\n    background: var(--primary-soft);\n    color: var(--primary);\n    transform: translateY(-1px);\n}\n\n.header-btn.is-active {\n    background: var(--primary-soft);\n    color: var(--primary);\n}\n\n/* Main Content Area */\n.main-content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    margin-bottom: 80px; /* Space for bottom nav */\n}\n\n.song-viewer {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 16px;\n    min-height: 60vh;\n}\n\n.image-container {\n    position: relative;\n    max-width: 100%;\n    max-height: 80vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.image-container img {\n    max-width: 100%;\n    max-height: 100%;\n    object-fit: contain;\n    border-radius: 8px;\n    box-shadow: 0 8px 32px var(--shadow-soft);\n    cursor: grab;\n    user-select: none;\n}\n\n.image-container img:active {\n    cursor: grabbing;\n}\n\n.loading-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.8);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border-radius: 8px;\n    gap: 12px;\n}\n\n.loading-spinner {\n    width: 32px;\n    height: 32px;\n    border: 3px solid var(--border);\n    border-top: 3px solid var(--primary);\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}\n\n.loading-text {\n    color: var(--text);\n    font-size: 14px;\n    font-weight: 500;\n}\n\n/* Updated Bottom Navigation - Simpler 3-button design */\n.bottom-nav {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: linear-gradient(180deg, var(--panel) 0%, rgba(17, 26, 20, 0.95) 100%);\n    border-top: 1px solid var(--border);\n    padding: 12px 16px;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    backdrop-filter: blur(20px);\n    z-index: 100;\n    box-shadow: 0 -4px 20px var(--shadow-soft);\n}\n\n.nav-btn {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 4px;\n    padding: 12px 16px;\n    background: transparent;\n    border: none;\n    color: var(--muted);\n    cursor: pointer;\n    transition: all 0.2s ease;\n    border-radius: 12px;\n    min-width: 60px;\n    flex: 1;\n    max-width: 100px;\n}\n\n.nav-btn:hover {\n    color: var(--primary);\n    background: var(--primary-soft);\n    transform: translateY(-2px);\n}\n\n.nav-btn:active {\n    transform: translateY(0);\n}\n\n.nav-btn.is-active {\n    color: var(--primary);\n    background: var(--primary-soft);\n}\n\n.nav-icon {\n    font-size: 20px;\n    line-height: 1;\n}\n\n.nav-label {\n    font-size: 11px;\n    font-weight: 600;\n    line-height: 1;\n    text-align: center;\n}\n\n/* Song List Drawer */\n.song-drawer {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 200;\n    display: flex;\n    align-items: flex-end;\n}\n\n.drawer-backdrop {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.6);\n    backdrop-filter: blur(4px);\n}\n\n.drawer-content {\n    position: relative;\n    background: var(--panel);\n    border-radius: 16px 16px 0 0;\n    border: 1px solid var(--border);\n    width: 100%;\n    max-height: 80vh;\n    display: flex;\n    flex-direction: column;\n    box-shadow: 0 -8px 32px var(--shadow);\n    animation: slideUp 0.3s ease;\n}\n\n.drawer-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 16px 20px;\n    border-bottom: 1px solid var(--border);\n}\n\n.drawer-header h3 {\n    margin: 0;\n    font-size: 18px;\n    font-weight: 600;\n    color: var(--text-bright);\n}\n\n.close-btn {\n    width: 32px;\n    height: 32px;\n    border-radius: 8px;\n    background: transparent;\n    border: 1px solid var(--border);\n    color: var(--muted);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    font-size: 16px;\n}\n\n.close-btn:hover {\n    background: var(--error);\n    color: white;\n}\n\n.drawer-search {\n    padding: 16px 20px;\n    border-bottom: 1px solid var(--border);\n    position: relative;\n}\n\n.drawer-search input {\n    width: 100%;\n    padding: 12px 40px 12px 16px;\n    background: var(--panel-light);\n    border: 1px solid var(--border);\n    border-radius: 8px;\n    color: var(--text);\n    font-size: 14px;\n}\n\n.drawer-search input:focus {\n    outline: none;\n    border-color: var(--primary);\n    box-shadow: 0 0 0 3px var(--primary-soft);\n}\n\n.clear-btn {\n    position: absolute;\n    right: 28px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 24px;\n    height: 24px;\n    border-radius: 4px;\n    background: transparent;\n    border: none;\n    color: var(--muted);\n    cursor: pointer;\n    transition: all 0.2s ease;\n    font-size: 14px;\n}\n\n.clear-btn:hover {\n    background: var(--error);\n    color: white;\n}\n\n.song-tabs {\n    display: flex;\n    border-bottom: 1px solid var(--border);\n}\n\n.tab-btn {\n    flex: 1;\n    padding: 12px 16px;\n    background: transparent;\n    border: none;\n    color: var(--muted);\n    font-size: 14px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    border-bottom: 2px solid transparent;\n}\n\n.tab-btn:hover {\n    color: var(--text);\n    background: var(--panel-light);\n}\n\n.tab-btn.active {\n    color: var(--primary);\n    border-bottom-color: var(--primary);\n}\n\n.song-list-container {\n    flex: 1;\n    overflow-y: auto;\n    padding: 8px 0;\n}\n\n.simple-song-list {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n}\n\n.simple-song-list li {\n    padding: 12px 20px;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    border-left: 3px solid transparent;\n    font-size: 14px;\n    color: var(--text);\n}\n\n.simple-song-list li:hover {\n    background: var(--panel-light);\n    border-left-color: var(--primary);\n    color: var(--primary);\n}\n\n.simple-song-list li.active {\n    background: var(--primary-soft);\n    border-left-color: var(--primary);\n    color: var(--primary);\n    font-weight: 600;\n}\n\n/* Zoom Controls Overlay */\n.zoom-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 200;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.zoom-backdrop {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.6);\n    backdrop-filter: blur(4px);\n}\n\n.zoom-panel {\n    position: relative;\n    background: var(--panel);\n    border-radius: 16px;\n    border: 1px solid var(--border);\n    padding: 20px;\n    box-shadow: 0 8px 32px var(--shadow);\n    animation: pulseIn 0.3s ease;\n    max-width: 300px;\n    width: 90%;\n}\n\n.zoom-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 16px;\n}\n\n.zoom-header h3 {\n    margin: 0;\n    font-size: 16px;\n    font-weight: 600;\n    color: var(--text-bright);\n}\n\n.zoom-buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.zoom-control-btn {\n    padding: 12px 16px;\n    background: var(--panel-light);\n    border: 1px solid var(--border);\n    border-radius: 8px;\n    color: var(--text);\n    cursor: pointer;\n    transition: all 0.2s ease;\n    font-size: 14px;\n    font-weight: 500;\n}\n\n.zoom-control-btn:hover {\n    background: var(--primary);\n    color: white;\n    transform: translateY(-1px);\n}\n\n/* Toast Notifications */\n.toast {\n    position: fixed;\n    top: 80px;\n    left: 50%;\n    transform: translateX(-50%);\n    background: var(--panel);\n    border: 1px solid var(--border);\n    border-radius: 8px;\n    padding: 12px 16px;\n    color: var(--text);\n    font-size: 14px;\n    font-weight: 500;\n    z-index: 300;\n    box-shadow: 0 4px 20px var(--shadow);\n    animation: slideUp 0.3s ease;\n}\n\n.toast.success {\n    border-color: var(--success);\n    color: var(--success);\n}\n\n.toast.error {\n    border-color: var(--error);\n    color: var(--error);\n}\n\n/* Mobile Optimizations for New Design */\n@media (max-width: 768px) {\n    .simple-header {\n        padding: 8px 12px;\n    }\n    \n    .header-btn {\n        width: 32px;\n        height: 32px;\n        font-size: 12px;\n    }\n    \n    .current-song-title {\n        font-size: 14px;\n    }\n    \n    .song-counter {\n        font-size: 11px;\n    }\n    \n    .nav-btn {\n        padding: 8px 12px;\n        min-width: 50px;\n    }\n    \n    .nav-icon {\n        font-size: 18px;\n    }\n    \n    .nav-label {\n        font-size: 10px;\n    }\n    \n    .drawer-content {\n        max-height: 90vh;\n    }\n    \n    .zoom-panel {\n        margin: 16px;\n        width: auto;\n    }\n}\n\n\n","size_bytes":54454}},"version":1}